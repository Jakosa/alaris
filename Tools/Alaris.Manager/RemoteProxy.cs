//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://github.com/Twl/alaris", ConfigurationName="IRemote")]
public interface IRemote
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://github.com/Twl/alaris/IRemote/Authorize", ReplyAction="http://github.com/Twl/alaris/IRemote/AuthorizeResponse")]
    bool Authorize(string passHash);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://github.com/Twl/alaris/IRemote/PublicMessage", ReplyAction="http://github.com/Twl/alaris/IRemote/PublicMessageResponse")]
    void PublicMessage(string channel, string message);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IRemoteChannel : IRemote, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class RemoteClient : System.ServiceModel.ClientBase<IRemote>, IRemote
{
    
    public RemoteClient()
    {
    }
    
    public RemoteClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public RemoteClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RemoteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public RemoteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool Authorize(string passHash)
    {
        return base.Channel.Authorize(passHash);
    }
    
    public void PublicMessage(string channel, string message)
    {
        base.Channel.PublicMessage(channel, message);
    }
}
