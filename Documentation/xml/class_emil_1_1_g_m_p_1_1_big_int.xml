<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="class_emil_1_1_g_m_p_1_1_big_int" kind="class" prot="public">
    <compoundname>Emil::GMP::BigInt</compoundname>
    <innerclass refid="struct_emil_1_1_g_m_p_1_1_big_int_1_1_mpz_value" prot="private">Emil::GMP::BigInt::MpzValue</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1aa4e1884505e88ce2c4861f9a8e126b09" prot="private" static="no" mutable="no">
        <type>const string</type>
        <definition>const string Emil.GMP.BigInt.MPZ_LIBRARY_PATH</definition>
        <argsstring></argsstring>
        <name>MPZ_LIBRARY_PATH</name>
        <initializer> @&quot;libgmp-3.dll&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="23" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a622d19ab1d0b0a786d3a9110f5305863" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Emil.GMP.BigInt.s_defaultStringBase</definition>
        <argsstring></argsstring>
        <name>s_defaultStringBase</name>
        <initializer> 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="268" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1ac25e6319d6c4e9f5ce457535aed8a40b" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int Emil.GMP.BigInt.s_chunkBitLength</definition>
        <argsstring></argsstring>
        <name>s_chunkBitLength</name>
        <initializer> 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="269" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1abdda02ef9a9d1396f7c3814211d23890" prot="private" static="no" mutable="no">
        <type>MpzValue</type>
        <definition>MpzValue Emil.GMP.BigInt.InternalValue</definition>
        <argsstring></argsstring>
        <name>InternalValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="271" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a950ec9e2aba94998c2aa46d158c78882" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.NegativeTen</definition>
        <argsstring></argsstring>
        <name>NegativeTen</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(-10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="277" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a86bed0056f4c6015ff093f79ea5c5a73" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.NegativeThree</definition>
        <argsstring></argsstring>
        <name>NegativeThree</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(-3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="278" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a18e053199211baa61fc5e684047789b4" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.NegativeTwo</definition>
        <argsstring></argsstring>
        <name>NegativeTwo</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(-2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="279" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a10a41f7a4437fc0e5ab7d62b892796d9" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.NegativeOne</definition>
        <argsstring></argsstring>
        <name>NegativeOne</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="280" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1ad20e33a8f39428e2ad5764c74def4409" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.Zero</definition>
        <argsstring></argsstring>
        <name>Zero</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="281" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a0f570537789eacdda0f21ef6ae13a2a5" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.One</definition>
        <argsstring></argsstring>
        <name>One</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="282" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a114be81fdc774c999b688763e01a664c" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.Two</definition>
        <argsstring></argsstring>
        <name>Two</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="283" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a9cd70936cd6743e167b0e2ffb631a3d3" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.Three</definition>
        <argsstring></argsstring>
        <name>Three</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="284" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_emil_1_1_g_m_p_1_1_big_int_1a1689d1849a493c278946cd3d3b471091" prot="public" static="yes" mutable="no">
        <type>readonly <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>readonly BigInt Emil.GMP.BigInt.Ten</definition>
        <argsstring></argsstring>
        <name>Ten</name>
        <initializer> new <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="285" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_emil_1_1_g_m_p_1_1_big_int_1afc193d789cf68f438575fb7e92f69b1e" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.this[int bitIndex]</definition>
        <argsstring>[int bitIndex]</argsstring>
        <name>this</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1236" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_emil_1_1_g_m_p_1_1_big_int_1a179518978e403d243234678ed624e8de" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsOdd</definition>
        <argsstring></argsstring>
        <name>IsOdd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1631" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="class_emil_1_1_g_m_p_1_1_big_int_1ae30bf01c3a175e15a046502940d59195" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsEven</definition>
        <argsstring></argsstring>
        <name>IsEven</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1642" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1634" bodyend="-1"/>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1a39b87adf0d492c810cb93c30776f52d4" compoundref="_big_int_8cs" startline="1888" endline="1894">Emil.GMP.BigInt::JacobiSymbol</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_emil_1_1_g_m_p_1_1_big_int_1a61596f5528b09e7d7b6780f6579b347d" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.BitLength</definition>
        <argsstring></argsstring>
        <name>BitLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1651" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1646" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa76cb0540e7eef40febced0a7249b1e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_init</definition>
        <argsstring>(ref MpzValue x)</argsstring>
        <name>__gmpz_init</name>
        <param>
          <type>ref MpzValue</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="26"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a88fee5a5d4e641293cfeb09f15863af5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_init2</definition>
        <argsstring>(ref MpzValue x, uint n)</argsstring>
        <name>__gmpz_init2</name>
        <param>
          <type>ref MpzValue</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="28"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a302ef471e5e1a810cb7585b5db913734" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_init_set</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op)</argsstring>
        <name>__gmpz_init_set</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="30"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1adcdc31a521a25956db7594ef9cab4bd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_init_set_si</definition>
        <argsstring>(ref MpzValue rop, int op)</argsstring>
        <name>__gmpz_init_set_si</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="32"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a43bfb55630d3373a851a37dcc4478e76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_init_set_ui</definition>
        <argsstring>(ref MpzValue rop, uint op)</argsstring>
        <name>__gmpz_init_set_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="34"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a074c83ab5c757d3e44cc07e4c39eed88" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_init_set_d</definition>
        <argsstring>(ref MpzValue rop, double op)</argsstring>
        <name>__gmpz_init_set_d</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="36"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac667d9a5f73f08ab3f62eec349a3777e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_init_set_str</definition>
        <argsstring>(ref MpzValue rop, string str, int @base)</argsstring>
        <name>__gmpz_init_set_str</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int @</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="38"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aca022ab6d68eb10eedf9ece0a92d0a36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_clear</definition>
        <argsstring>(ref MpzValue x)</argsstring>
        <name>__gmpz_clear</name>
        <param>
          <type>ref MpzValue</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="40"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aafb837211cf7d39fb2e535ee9cec2db3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_import</definition>
        <argsstring>(ref MpzValue rop, uint count, int order, uint size, int endian, uint nails, void *op)</argsstring>
        <name>__gmpz_import</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>order</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endian</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nails</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="42"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aefeffae7d2af812f14fcfc491e84a089" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* Emil.GMP.BigInt.__gmpz_export</definition>
        <argsstring>(void *rop, uint *countp, int order, uint size, int endian, uint nails, ref MpzValue op)</argsstring>
        <name>__gmpz_export</name>
        <param>
          <type>void *</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint *</type>
          <declname>countp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>order</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>endian</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>nails</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="44"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a412be5bdcce5c1f8492ce2f0a2b34965" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_neg</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op)</argsstring>
        <name>__gmpz_neg</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="46"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a634a09a4f057fdddc67934ac20205177" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_abs</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op)</argsstring>
        <name>__gmpz_abs</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="48"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a51984a32b36a1cae7fc5af2063be8624" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_sizeinbase</definition>
        <argsstring>(ref MpzValue op, int @base)</argsstring>
        <name>__gmpz_sizeinbase</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int @</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="50"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae875734e2d604ec0b3e37f25eafa4532" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_cmp</definition>
        <argsstring>(ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_cmp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="52"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae27906923fb2be20dbd1438f4f1bf8d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_cmp_si</definition>
        <argsstring>(ref MpzValue op1, int op2)</argsstring>
        <name>__gmpz_cmp_si</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="54"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a763e0870936e3c48fbb9c835e1352d6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_cmp_ui</definition>
        <argsstring>(ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_cmp_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="56"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4a0f0bc671177308fd2ccea745e6d5a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_cmp_d</definition>
        <argsstring>(ref MpzValue op1, double op2)</argsstring>
        <name>__gmpz_cmp_d</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="58"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1351ccacfb3886c3393a82b94720cb70" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_cmpabs</definition>
        <argsstring>(ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_cmpabs</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="60"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8d66cd102854665859a09dff2c7bc18f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_cmpabs_ui</definition>
        <argsstring>(ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_cmpabs_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="62"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8e1aab039b73d0f4b9832e185926ab53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_cmpabs_d</definition>
        <argsstring>(ref MpzValue op1, double op2)</argsstring>
        <name>__gmpz_cmpabs_d</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="64"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a38f9f42a13c46999850c66d644b0174a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_powm</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue @base, ref MpzValue exp, ref MpzValue mod)</argsstring>
        <name>__gmpz_powm</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue @</type>
          <declname>base</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="66"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a38397e273ceb5288e90b55277da7491f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_powm_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue @base, uint exp, ref MpzValue mod)</argsstring>
        <name>__gmpz_powm_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue @</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="68"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a44edf4da9c4846e6410444d5cca000b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_pow_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue @base, uint exp)</argsstring>
        <name>__gmpz_pow_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue @</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="70"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5e0da5efb81cd6556ee54700255b1865" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_ui_pow_ui</definition>
        <argsstring>(ref MpzValue rop, uint @base, uint exp)</argsstring>
        <name>__gmpz_ui_pow_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint @</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="72"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1bee71dae07d3d0a6719a5ba4be6b0c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_add</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_add</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="74"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4f52489f443343ee8034abf112746c5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_add_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_add_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="76"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a42dcfc354c7a78428b252b5887666a48" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_sub</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_sub</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="78"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4202fd8348f70a7520db7137875a99f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_ui_sub</definition>
        <argsstring>(ref MpzValue rop, uint op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_ui_sub</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="80"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a68551ea93e757aafac082e195ad3b60a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_sub_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_sub_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="82"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5794d9cf94fabf8488bf7f08304f650a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_mul</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_mul</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="84"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9c6dc716a28110a0774ad42ee8f4f532" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_mul_si</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, int op2)</argsstring>
        <name>__gmpz_mul_si</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="86"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aea8a25cbf9a64fa5b8f01031232ff7d7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_mul_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_mul_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="88"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a89490e6915876557b1df9e644a7c6297" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_mul_2exp</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_mul_2exp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="90"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0ef3b75c05ab3b8631c1b77d00110866" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_addmul</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_addmul</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="92"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a28640444f9aaa97e644b9e8524e2caba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_addmul_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_addmul_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="94"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af8b71c8c1c373d97e375ed1c27e6684b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_submul</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_submul</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="96"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2d6964ca2a9cffa2a79b7d71ef4fddf3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_submul_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_submul_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="98"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae67ba32c990969c0927694d48bf3d758" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_tdiv_q</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_tdiv_q</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="100"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a94b3fffeff90dbe0f4778b9d73e0baec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_tdiv_r</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_tdiv_r</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="102"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afc1c0f893f630abd4e9e7c03ad7e93af" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_tdiv_qr</definition>
        <argsstring>(ref MpzValue q, ref MpzValue r, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_tdiv_qr</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="104"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a902f8826b0c5f249f531728e8034a031" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_tdiv_q_ui</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_tdiv_q_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="106"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa83291d72c805054d099f42f83d7cff0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_tdiv_r_ui</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_tdiv_r_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="108"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9317c0bd0997cd357aeeedec30fd9eb5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_tdiv_qr_ui</definition>
        <argsstring>(ref MpzValue q, ref MpzValue r, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_tdiv_qr_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="110"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4c92c98abcf70e4556c29a41c53e737d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_tdiv_ui</definition>
        <argsstring>(ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_tdiv_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="112"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a05e9f8150ce1a8bfc647a35dc0c9915b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_tdiv_q_2exp</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, uint b)</argsstring>
        <name>__gmpz_tdiv_q_2exp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="114"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac9ddd9bed18e9c2b2a02bb70c5344d0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_tdiv_r_2exp</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, uint b)</argsstring>
        <name>__gmpz_tdiv_r_2exp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="116"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aba6ce84c72e7a49fba7845fcf83a2bf0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_cdiv_q</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_cdiv_q</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="118"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac8d98cb1fc311f29bdce83072802a622" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_cdiv_r</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_cdiv_r</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="120"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a786a2fe6b2f3dc85f89633f96e923661" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_cdiv_qr</definition>
        <argsstring>(ref MpzValue q, ref MpzValue r, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_cdiv_qr</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="122"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a918cb3ce909d8673dcdbfc02bfb0b10b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_cdiv_q_ui</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_cdiv_q_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="124"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a00e7358c0a283fd4b854534fed5c5fd9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_cdiv_r_ui</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_cdiv_r_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="126"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad3d92ae77618c577a25b582009d8e4d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_cdiv_qr_ui</definition>
        <argsstring>(ref MpzValue q, ref MpzValue r, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_cdiv_qr_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="128"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa0bc56f04224b2696f091d8e391d53a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_cdiv_ui</definition>
        <argsstring>(ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_cdiv_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="130"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac8d266579b75832a8ed518bcdba766d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_cdiv_q_2exp</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, uint b)</argsstring>
        <name>__gmpz_cdiv_q_2exp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="132"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a12305b4a5dfc8f3da3465a3e21841817" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_cdiv_r_2exp</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, uint b)</argsstring>
        <name>__gmpz_cdiv_r_2exp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="134"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a90e7da5abca0755a14f88999a8834dda" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fdiv_q</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_fdiv_q</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="136"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aeb4725d858e5437c6bdec51698a01bfe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fdiv_r</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_fdiv_r</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="138"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0b143a1479a706f4bf5305bbdfd92595" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fdiv_qr</definition>
        <argsstring>(ref MpzValue q, ref MpzValue r, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_fdiv_qr</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="140"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a05a42a6b4f6b0ecb1f86dd2ce2ab8c2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_fdiv_q_ui</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_fdiv_q_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="142"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad0808eb913e6d588594df24d3f35073c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_fdiv_r_ui</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_fdiv_r_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="144"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab97509e0f333a87145645d7c37d9ee30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_fdiv_qr_ui</definition>
        <argsstring>(ref MpzValue q, ref MpzValue r, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_fdiv_qr_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="146"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a169ca74205264e5bf8398312a322d50d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_fdiv_ui</definition>
        <argsstring>(ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_fdiv_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="148"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a75c465c96cf3d40010917e38e8b8a729" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fdiv_q_2exp</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, uint b)</argsstring>
        <name>__gmpz_fdiv_q_2exp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="150"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa84852276d6e83adb755fb8a369d43fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fdiv_r_2exp</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, uint b)</argsstring>
        <name>__gmpz_fdiv_r_2exp</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="152"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a893201fc42c44642389aa4fb626edaab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_mod</definition>
        <argsstring>(ref MpzValue r, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_mod</name>
        <param>
          <type>ref MpzValue</type>
          <declname>r</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="154"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad66a8512423831328da19bcbef13d1ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_divexact</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_divexact</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="156"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7fbd2f9cb1f4deac3e25101bb21f2d01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_divexact_ui</definition>
        <argsstring>(ref MpzValue q, ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_divexact_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>q</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="158"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a76cfcfcf3a7ab46a232ecb811c4ac32a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_divisible_p</definition>
        <argsstring>(ref MpzValue n, ref MpzValue d)</argsstring>
        <name>__gmpz_divisible_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="160"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2739f1b759b489f8630a189bc66cef34" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_divisible_ui_p</definition>
        <argsstring>(ref MpzValue n, uint d)</argsstring>
        <name>__gmpz_divisible_ui_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="162"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a17dcb1b788b262417e22b29e2312e077" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_divisible_2exp_p</definition>
        <argsstring>(ref MpzValue n, uint b)</argsstring>
        <name>__gmpz_divisible_2exp_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="164"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aadd2c09acd783c0122e8aedca9fc2357" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_congruent_p</definition>
        <argsstring>(ref MpzValue n, ref MpzValue c, ref MpzValue d)</argsstring>
        <name>__gmpz_congruent_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>c</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="166"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3198e0dbe8ae338a65b221b7501f581b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_congruent_ui_p</definition>
        <argsstring>(ref MpzValue n, uint c, uint d)</argsstring>
        <name>__gmpz_congruent_ui_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>c</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="168"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8beea78146d63668b0b5991d827e2a27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_congruent_2exp_p</definition>
        <argsstring>(ref MpzValue n, ref MpzValue c, uint b)</argsstring>
        <name>__gmpz_congruent_2exp_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>c</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="170"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a08f2adb2f5f88b7838df3d39be827ee1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_invert</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_invert</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="172"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af244a1b9c8b1ae14e5e042a0dc203044" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_and</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_and</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="174"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1adda27e30f19dc2283c42139ce1342469" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_ior</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_ior</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="176"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a20c19d6d970695b5f43777c085b90b8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_xor</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_xor</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="178"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a27714b4a2df074c9ed8e06c12e465b63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_com</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op)</argsstring>
        <name>__gmpz_com</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="180"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae1ed7ac76347c38bca1c4f0a15a35e9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_popcount</definition>
        <argsstring>(ref MpzValue op)</argsstring>
        <name>__gmpz_popcount</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="182"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1adf5c61d76749b761cc8f78ef29c704a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_hamdist</definition>
        <argsstring>(ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_hamdist</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="184"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac70b4a13981982d4d3f0200c46130dec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_scan0</definition>
        <argsstring>(ref MpzValue op, uint starting_bit)</argsstring>
        <name>__gmpz_scan0</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>starting_bit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="186"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af76e0d6033961fa92b6ec47d263fc616" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_scan1</definition>
        <argsstring>(ref MpzValue op, uint starting_bit)</argsstring>
        <name>__gmpz_scan1</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>starting_bit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="188"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a07962e96442ffb37d42f8eca82e1dc0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_setbit</definition>
        <argsstring>(ref MpzValue rop, uint bit_index)</argsstring>
        <name>__gmpz_setbit</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>bit_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="190"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad5c0eb182decd23a0a82fa5f834883ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_clrbit</definition>
        <argsstring>(ref MpzValue rop, uint bit_index)</argsstring>
        <name>__gmpz_clrbit</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>bit_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="192"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa00db9b6eba604023c40454289353118" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_combit</definition>
        <argsstring>(ref MpzValue rop, uint bit_index)</argsstring>
        <name>__gmpz_combit</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>bit_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="194"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7c76b3b77b81d2469aac063e0ab439c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_tstbit</definition>
        <argsstring>(ref MpzValue rop, uint bit_index)</argsstring>
        <name>__gmpz_tstbit</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>bit_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="196"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9649bfa803d2f2faa56c4a5744e02c43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_get_ui</definition>
        <argsstring>(ref MpzValue op)</argsstring>
        <name>__gmpz_get_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="198"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a65cf229da68b5ea1099901469ac347db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_get_si</definition>
        <argsstring>(ref MpzValue op)</argsstring>
        <name>__gmpz_get_si</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="200"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a79e7a2e04f69ac27b4f042e8a6bfd513" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double Emil.GMP.BigInt.__gmpz_get_d</definition>
        <argsstring>(ref MpzValue op)</argsstring>
        <name>__gmpz_get_d</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="202"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a92f4f6adadc842b77161821771ff69ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* Emil.GMP.BigInt.__gmpz_get_str</definition>
        <argsstring>(StringBuilder str, int @base, ref MpzValue op)</argsstring>
        <name>__gmpz_get_str</name>
        <param>
          <type>StringBuilder</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int @</type>
          <declname>base</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="204"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4b4ebd56db89dbc7c17c81e1c000a9a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_root</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op, uint n)</argsstring>
        <name>__gmpz_root</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="206"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af05a28b9827ea011a761343e50d6cf73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_rootrem</definition>
        <argsstring>(ref MpzValue root, ref MpzValue rem, ref MpzValue u, uint n)</argsstring>
        <name>__gmpz_rootrem</name>
        <param>
          <type>ref MpzValue</type>
          <declname>root</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>u</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="208"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaceb3712257d1fe83f9a971d16cc3445" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_sqrt</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op)</argsstring>
        <name>__gmpz_sqrt</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="210"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac82718a1714cd3c4481d4b8f67aefc08" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_sqrtrem</definition>
        <argsstring>(ref MpzValue rop1, ref MpzValue rop2, ref MpzValue op)</argsstring>
        <name>__gmpz_sqrtrem</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>rop2</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="212"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a88740fc5e9484c811ad3f77ba16dbe5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_perfect_power_p</definition>
        <argsstring>(ref MpzValue op)</argsstring>
        <name>__gmpz_perfect_power_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="214"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad6caf3eb4a7ce46b76e4743e9f9885df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_perfect_square_p</definition>
        <argsstring>(ref MpzValue op)</argsstring>
        <name>__gmpz_perfect_square_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="216"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af88d62f56c9bfab25ed0d7ce411a382c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_probab_prime_p</definition>
        <argsstring>(ref MpzValue n, int reps)</argsstring>
        <name>__gmpz_probab_prime_p</name>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="218"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab423c9b96fe3a45e292fec1f02bbf58a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_nextprime</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op)</argsstring>
        <name>__gmpz_nextprime</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="220"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1b42ad9372b808e44f88da5c3e376c45" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_gcd</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_gcd</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="222"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a36c06abdd7f9f291549bebe4307fb1b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_gcd_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_gcd_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="224"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a457568673f6a6cb33cb760e2263e5d13" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_gcdext</definition>
        <argsstring>(ref MpzValue g, ref MpzValue s, ref MpzValue t, ref MpzValue a, ref MpzValue b)</argsstring>
        <name>__gmpz_gcdext</name>
        <param>
          <type>ref MpzValue</type>
          <declname>g</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>s</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>t</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="226"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a103fa96001326cf80048fb6899a8ac8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_gcdext</definition>
        <argsstring>(ref MpzValue g, ref MpzValue s, MpzValue *t, ref MpzValue a, ref MpzValue b)</argsstring>
        <name>__gmpz_gcdext</name>
        <param>
          <type>ref MpzValue</type>
          <declname>g</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>s</declname>
        </param>
        <param>
          <type>MpzValue *</type>
          <declname>t</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="228"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a45484b598d05af499b47b0a212646b14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_lcm</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, ref MpzValue op2)</argsstring>
        <name>__gmpz_lcm</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="230"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0dc9b07034be276e5275471ad20a0ed7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_lcm_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op1, uint op2)</argsstring>
        <name>__gmpz_lcm_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="232"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2656bb28863cf6bb9a7535a0f79a48d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_jacobi</definition>
        <argsstring>(ref MpzValue a, ref MpzValue b)</argsstring>
        <name>__gmpz_jacobi</name>
        <param>
          <type>ref MpzValue</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="234"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9ea22c29d531c196934c7ebc0953b345" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_legendre</definition>
        <argsstring>(ref MpzValue a, ref MpzValue p)</argsstring>
        <name>__gmpz_legendre</name>
        <param>
          <type>ref MpzValue</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="236"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6a4f008f9e5ae6ca9fcae539a6a1daf3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_kronecker</definition>
        <argsstring>(ref MpzValue a, ref MpzValue b)</argsstring>
        <name>__gmpz_kronecker</name>
        <param>
          <type>ref MpzValue</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="238"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af219fd7d16d864af5b886627340d1dbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_kronecker_si</definition>
        <argsstring>(ref MpzValue a, int b)</argsstring>
        <name>__gmpz_kronecker_si</name>
        <param>
          <type>ref MpzValue</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="240"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a047956baf815aba98762418702a67ed9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_kronecker_ui</definition>
        <argsstring>(ref MpzValue a, uint b)</argsstring>
        <name>__gmpz_kronecker_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="242"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab5603870077a4c0508c2a63927dcfe1e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_si_kronecker</definition>
        <argsstring>(int a, ref MpzValue b)</argsstring>
        <name>__gmpz_si_kronecker</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="244"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6d1286d49413991260734bd1442b441e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.__gmpz_ui_kronecker</definition>
        <argsstring>(uint a, ref MpzValue b)</argsstring>
        <name>__gmpz_ui_kronecker</name>
        <param>
          <type>uint</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="246"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a46070ebe0c37f412b16e9c71c12ddaa6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>static uint Emil.GMP.BigInt.__gmpz_remove</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue op, ref MpzValue f)</argsstring>
        <name>__gmpz_remove</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>op</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="248"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a886411f4c21a67c0b5770fee19bf5443" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fac_ui</definition>
        <argsstring>(ref MpzValue rop, uint op)</argsstring>
        <name>__gmpz_fac_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="250"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a88c7cb442d2a74741db305cfab19ae29" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_bin_ui</definition>
        <argsstring>(ref MpzValue rop, ref MpzValue n, uint k)</argsstring>
        <name>__gmpz_bin_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="252"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af2c228124b669a9ac136f1ee2df676e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_bin_uiui</definition>
        <argsstring>(ref MpzValue rop, uint n, uint k)</argsstring>
        <name>__gmpz_bin_uiui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>rop</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="254"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8a15b3654c5e20147c44e66c84303e61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fib_ui</definition>
        <argsstring>(ref MpzValue fn, uint n)</argsstring>
        <name>__gmpz_fib_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="256"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac382874cb2c298a26479437e0c33825d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_fib2_ui</definition>
        <argsstring>(ref MpzValue fn, ref MpzValue fnsub1, uint n)</argsstring>
        <name>__gmpz_fib2_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>fnsub1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="258"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aae428f8c94405bcee1e5536de428e040" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_lucnum_ui</definition>
        <argsstring>(ref MpzValue ln, uint n)</argsstring>
        <name>__gmpz_lucnum_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>ln</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="260"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3bc70238b11ed3248583ef1500ad2829" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Emil.GMP.BigInt.__gmpz_lucnum2_ui</definition>
        <argsstring>(ref MpzValue ln, ref MpzValue lnsub1, uint n)</argsstring>
        <name>__gmpz_lucnum2_ui</name>
        <param>
          <type>ref MpzValue</type>
          <declname>ln</declname>
        </param>
        <param>
          <type>ref MpzValue</type>
          <declname>lnsub1</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="262"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7cc0253aeb424fed9e820ca7a4ceacdf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.~BigInt</definition>
        <argsstring>()</argsstring>
        <name>~BigInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="302" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3be219bdda91aa1c19bab767f353bca4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object ICloneable.</type>
        <definition>object ICloneable. Emil.GMP.BigInt.Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3215" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3214" bodyend="3217"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab005bfacdaeb0af72284141e63f3629e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TypeCode IConvertible.</type>
        <definition>TypeCode IConvertible. Emil.GMP.BigInt.GetTypeCode</definition>
        <argsstring>()</argsstring>
        <name>GetTypeCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3368" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3367" bodyend="3370"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9a7e933a53a09b643a72698257a56276" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool IConvertible.</type>
        <definition>bool IConvertible. Emil.GMP.BigInt.ToBoolean</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToBoolean</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3373" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3372" bodyend="3375"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad876b7ac3ef8c820025798f447254f44" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte IConvertible.</type>
        <definition>byte IConvertible. Emil.GMP.BigInt.ToByte</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToByte</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3378" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3377" bodyend="3380"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af4f63d8c80f868f8cb5f1b9607246adc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char IConvertible.</type>
        <definition>char IConvertible. Emil.GMP.BigInt.ToChar</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToChar</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3383" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3382" bodyend="3385"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0ffd50386a7aaf6516a6ac614de3d314" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DateTime IConvertible.</type>
        <definition>DateTime IConvertible. Emil.GMP.BigInt.ToDateTime</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToDateTime</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3388" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3387" bodyend="3390"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a42dde45be6f55d69217147f1268de7a0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>decimal IConvertible.</type>
        <definition>decimal IConvertible. Emil.GMP.BigInt.ToDecimal</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToDecimal</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3393" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3392" bodyend="3395"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acb58387528924434f18ead61a9507968" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double IConvertible.</type>
        <definition>double IConvertible. Emil.GMP.BigInt.ToDouble</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToDouble</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3398" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3397" bodyend="3400"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a163e24a26729a81f6ca978fd2feec56f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short IConvertible.</type>
        <definition>short IConvertible. Emil.GMP.BigInt.ToInt16</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToInt16</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3403" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3402" bodyend="3405"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0aee0fd1e0478f0fc13b53a5a270efad" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int IConvertible.</type>
        <definition>int IConvertible. Emil.GMP.BigInt.ToInt32</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToInt32</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3408" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3407" bodyend="3410"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4779d6464cfb55a6011c0a77f783a576" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long IConvertible.</type>
        <definition>long IConvertible. Emil.GMP.BigInt.ToInt64</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToInt64</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3413" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3412" bodyend="3415"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae05129f243eebc00c3e2f96f465a156f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>sbyte IConvertible.</type>
        <definition>sbyte IConvertible. Emil.GMP.BigInt.ToSByte</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToSByte</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3418" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3417" bodyend="3420"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8855c0eaabd508b1fed6189fd18ebe96" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float IConvertible.</type>
        <definition>float IConvertible. Emil.GMP.BigInt.ToSingle</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToSingle</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3423" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3422" bodyend="3425"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8bdfd2486746804c595a8687d82d4045" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string IConvertible.</type>
        <definition>string IConvertible. Emil.GMP.BigInt.ToString</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToString</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3428" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3427" bodyend="3430"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af418f5150534bfee0c2dc48c2961eccd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object IConvertible.</type>
        <definition>object IConvertible. Emil.GMP.BigInt.ToType</definition>
        <argsstring>(Type targetType, IFormatProvider provider)</argsstring>
        <name>ToType</name>
        <param>
          <type>Type</type>
          <declname>targetType</declname>
        </param>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3433" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3432" bodyend="3496"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9a03d087abb507829c3003ea4773807a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ushort IConvertible.</type>
        <definition>ushort IConvertible. Emil.GMP.BigInt.ToUInt16</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToUInt16</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3499" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3498" bodyend="3501"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac3da54dd4b6c913d53f6f37b40c1022e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint IConvertible.</type>
        <definition>uint IConvertible. Emil.GMP.BigInt.ToUInt32</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToUInt32</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3504" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3503" bodyend="3506"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af29fae6aebc557ab9cd78ecd16933239" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ulong IConvertible.</type>
        <definition>ulong IConvertible. Emil.GMP.BigInt.ToUInt64</definition>
        <argsstring>(IFormatProvider provider)</argsstring>
        <name>ToUInt64</name>
        <param>
          <type>IFormatProvider</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3509" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3508" bodyend="3511"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad318fe480cb8a0e1472e9ac3243cf7ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>()</argsstring>
        <name>BigInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="292" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab1a8a1f22251b6d9f87901db79ce1922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(BigInt other)</argsstring>
        <name>BigInt</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="297" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad33ee091620688288cc1d16e11aaa2d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(int value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="308" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a763c3e6017a8ebc27dd492bf0fdab7eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(uint value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>uint</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="313" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a84017016705d8b1f448bad9ba8d02280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(uint value, int sign)</argsstring>
        <name>BigInt</name>
        <param>
          <type>uint</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="318" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="317" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad5454669adb66701a6c8ac2dcbeb1d1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(float value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="341" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab0df1a9138c72d87be3700d52c55e4b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(double value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="345" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="344" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad0088a7f548f14e06a5c2ecead53f9eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(decimal value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>decimal</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="353" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a723d6e39e6242deecd370d59407cf345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(long value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="357" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="356" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0d710f2e879006c67b30bd3a8485adc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(ulong value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>ulong</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="413" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="412" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3b82c9f63ba109d585c9aa0066dbc3ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(ulong value, int sign)</argsstring>
        <name>BigInt</name>
        <param>
          <type>ulong</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="443" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="442" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2ff9c5817da77a6984dbfccdb9ec1aaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(byte[] value, int sign)</argsstring>
        <name>BigInt</name>
        <param>
          <type>byte[]</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="472" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="471" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa41a6528e626518f0b87952a6d87bddf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(byte[] value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>byte[]</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="487" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="485" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad65b2164ce41235b04b1e62b26224d6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(uint[] value, int sign)</argsstring>
        <name>BigInt</name>
        <param>
          <type>uint[]</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="491" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="490" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab11f1ec6cc8c21b75e57e0a607e68ccf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(uint[] value)</argsstring>
        <name>BigInt</name>
        <param>
          <type>uint[]</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="506" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="504" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a08f72d06950185a0b4c9a42f415f0619" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(string s)</argsstring>
        <name>BigInt</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="511" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="509" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aeb30d6cb923db18717d2639a1d5b4bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Emil.GMP.BigInt.BigInt</definition>
        <argsstring>(string s, int @base)</argsstring>
        <name>BigInt</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int @</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="515" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="514" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac2082b3183642278651d24d2174117ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.ChangeBit</definition>
        <argsstring>(int bitIndex, int value)</argsstring>
        <name>ChangeBit</name>
        <param>
          <type>int</type>
          <declname>bitIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1239" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1238" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a160a3512efe96de415960a78dcf1dc62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Negate</definition>
        <argsstring>()</argsstring>
        <name>Negate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1255" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1254" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae8254a40d0a4bc77ca042358b5ddda22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Complement</definition>
        <argsstring>()</argsstring>
        <name>Complement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1260" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1259" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a289e2e4c7fc72a33d3bf438c478e3d43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Add</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1265" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1264" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a97779cd27e711f53ad841c9b1778e968" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Add</definition>
        <argsstring>(int x)</argsstring>
        <name>Add</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1270" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1269" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aca1293439fda984da9f40f4bb8bd8c16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Add</definition>
        <argsstring>(uint x)</argsstring>
        <name>Add</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1275" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1274" bodyend="1277"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a67b93e1bef7a85850cd66d9593f434b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Subtract</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>Subtract</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1280" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1279" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acaacb0a41cb6f01bf769b809d04568b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Subtract</definition>
        <argsstring>(int x)</argsstring>
        <name>Subtract</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1285" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1284" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a71dfba7f646ebd61c563f4ba6549ffb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Subtract</definition>
        <argsstring>(uint x)</argsstring>
        <name>Subtract</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1290" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1289" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7774cc099febb7c65724791a8a970e52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Multiply</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>Multiply</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1295" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1294" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afff34aca697fe4d417335efc0843b1d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Multiply</definition>
        <argsstring>(int x)</argsstring>
        <name>Multiply</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1300" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1299" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a284f4e9fa81e7e32c4b8571beffc8a82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Multiply</definition>
        <argsstring>(uint x)</argsstring>
        <name>Multiply</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1305" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1304" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7f67bdcca22b88389bd87a3e4baee120" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Square</definition>
        <argsstring>()</argsstring>
        <name>Square</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1310" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1309" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a22897a12acb67ea0a81fc906d4aeb02c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>Divide</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1315" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1314" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1abb85dc0442e5fe7b5c610bcd9f41b968" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(int x)</argsstring>
        <name>Divide</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1320" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1319" bodyend="1322"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1adb2ae1352f44219bc42abe31a0157224" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(uint x)</argsstring>
        <name>Divide</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1325" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1324" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac5db3fbf258275763990ea545758612f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(BigInt x, out BigInt remainder)</argsstring>
        <name>Divide</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1330" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1329" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a329d103386b14e9d43809c3a30aeb59e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(int x, out BigInt remainder)</argsstring>
        <name>Divide</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1338" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1337" bodyend="1353"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a94b4001624aa25fd554cb4947564d6ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(int x, out int remainder)</argsstring>
        <name>Divide</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>out int</type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1356" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1355" bodyend="1373"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a770853b0048914516a4557bd18182053" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(uint x, out BigInt remainder)</argsstring>
        <name>Divide</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1376" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1375" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2f27089d725c09a6d021c48b953888d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(uint x, out uint remainder)</argsstring>
        <name>Divide</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>out uint</type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1384" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1383" bodyend="1391"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3e3f5b365c74359550b818bded368cd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Divide</definition>
        <argsstring>(uint x, out int remainder)</argsstring>
        <name>Divide</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>out int</type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1394" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1393" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad0fcc0381bc614e3e3f52423c6e87afc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Remainder</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>Remainder</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1409" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1408" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a41a3ae07d9e3effad88269d2d9829ac4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsDivisibleBy</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>IsDivisibleBy</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1416" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1415" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a242398303f7ef63cdff4fcedc7591ad7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsDivisibleBy</definition>
        <argsstring>(int x)</argsstring>
        <name>IsDivisibleBy</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1421" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1420" bodyend="1426"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae3921a22c4fac988f14d07be684744a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsDivisibleBy</definition>
        <argsstring>(uint x)</argsstring>
        <name>IsDivisibleBy</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1429" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1428" bodyend="1431"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad504d8eb1709abdb29d6fd5d6b7f2fc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.DivideExactly</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>DivideExactly</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Divides exactly. Only works when the division is gauranteed to be exact (there is no remainder). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1439" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1438" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2deb1b55ab99cbfffb3b2e71d666385f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.DivideExactly</definition>
        <argsstring>(int x)</argsstring>
        <name>DivideExactly</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1446" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1445" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a20bf2a5653c93d946ac5c7254ab2fe89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.DivideExactly</definition>
        <argsstring>(uint x)</argsstring>
        <name>DivideExactly</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1460" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1459" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af84768d8435d8f95791b8ac93ba3ac8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.DivideMod</definition>
        <argsstring>(BigInt x, BigInt mod)</argsstring>
        <name>DivideMod</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1467" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1466" bodyend="1469"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1aa0cb6c80bf234259b311221896dbbd8b" compoundref="_big_int_8cs" startline="1589" endline="1596">Emil.GMP.BigInt::InvertMod</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa407c6401eea0ff38dea69ca82f24c2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.And</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>And</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1472" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1471" bodyend="1474"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3505ddef92e9efda501483ccb749da62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Or</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>Or</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1477" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1476" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a256ab324291af785e76df771e60a15be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Xor</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>Xor</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1482" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1481" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaf17cfc46f00efd97701602a8cd2a175" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Mod</definition>
        <argsstring>(BigInt mod)</argsstring>
        <name>Mod</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1487" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1486" bodyend="1489"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acb033ea461bcae921707d1f5f6d51754" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Mod</definition>
        <argsstring>(int mod)</argsstring>
        <name>Mod</name>
        <param>
          <type>int</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1492" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1491" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a87c36d1002554746403c2ec40b0c8f3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Mod</definition>
        <argsstring>(uint mod)</argsstring>
        <name>Mod</name>
        <param>
          <type>uint</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1497" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1496" bodyend="1499"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a93060897eec63089888aff2ad6804ff4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.ModAsInt32</definition>
        <argsstring>(int mod)</argsstring>
        <name>ModAsInt32</name>
        <param>
          <type>int</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1502" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1501" bodyend="1507"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a64492e819ac5feb9d71a1c541c3c9be2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint Emil.GMP.BigInt.ModAsUInt32</definition>
        <argsstring>(uint mod)</argsstring>
        <name>ModAsUInt32</name>
        <param>
          <type>uint</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1510" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1509" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa65df7c328988698931079a11bef9751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.ShiftLeft</definition>
        <argsstring>(int shiftAmount)</argsstring>
        <name>ShiftLeft</name>
        <param>
          <type>int</type>
          <declname>shiftAmount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1515" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1514" bodyend="1517"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae8cab4acbad9c2101dda90dbe3ce7a59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.ShiftRight</definition>
        <argsstring>(int shiftAmount)</argsstring>
        <name>ShiftRight</name>
        <param>
          <type>int</type>
          <declname>shiftAmount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1520" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1519" bodyend="1522"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0e9ff328679aebf8ede6fd94b5e6abae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.PowerMod</definition>
        <argsstring>(BigInt exponent, BigInt mod)</argsstring>
        <name>PowerMod</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>exponent</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1525" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1524" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac2b25c18c560a829cfd339eb062a0c85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.PowerMod</definition>
        <argsstring>(int exponent, BigInt mod)</argsstring>
        <name>PowerMod</name>
        <param>
          <type>int</type>
          <declname>exponent</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1532" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1531" bodyend="1536"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae186a6bcd42c5c1fae217c106db7fc27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.PowerMod</definition>
        <argsstring>(uint exponent, BigInt mod)</argsstring>
        <name>PowerMod</name>
        <param>
          <type>uint</type>
          <declname>exponent</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1539" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1538" bodyend="1553"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1aa0cb6c80bf234259b311221896dbbd8b" compoundref="_big_int_8cs" startline="1589" endline="1596">Emil.GMP.BigInt::InvertMod</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afa4d2dc5534f63163abb66437b26c3be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Power</definition>
        <argsstring>(int exponent)</argsstring>
        <name>Power</name>
        <param>
          <type>int</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1556" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1555" bodyend="1563"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acc07f3c04aea9158143b25ac2ade7878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Power</definition>
        <argsstring>(uint exponent)</argsstring>
        <name>Power</name>
        <param>
          <type>uint</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1566" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1565" bodyend="1570"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa0cb6c80bf234259b311221896dbbd8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.InvertMod</definition>
        <argsstring>(BigInt mod)</argsstring>
        <name>InvertMod</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1590" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1589" bodyend="1596"/>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1af84768d8435d8f95791b8ac93ba3ac8e" compoundref="_big_int_8cs" startline="1466" endline="1469">Emil.GMP.BigInt::DivideMod</referencedby>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1ae186a6bcd42c5c1fae217c106db7fc27" compoundref="_big_int_8cs" startline="1538" endline="1553">Emil.GMP.BigInt::PowerMod</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8104c5f04f5542523f7b92dd68f468b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.TryInvertMod</definition>
        <argsstring>(BigInt mod, out BigInt result)</argsstring>
        <name>TryInvertMod</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1599" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1598" bodyend="1613"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1c94fe68817b6c9cc38712a513e4c532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.InverseModExists</definition>
        <argsstring>(BigInt mod)</argsstring>
        <name>InverseModExists</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1616" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1615" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa5c5619deb0fbfdc759a2f0d00a62532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Sqrt</definition>
        <argsstring>()</argsstring>
        <name>Sqrt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1658" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1657" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9a27a2eb189c55c43c3b81148b37e031" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Sqrt</definition>
        <argsstring>(out BigInt remainder)</argsstring>
        <name>Sqrt</name>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1665" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1664" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a09bc320885bfc3afd35197bc24c90591" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Sqrt</definition>
        <argsstring>(out bool isExact)</argsstring>
        <name>Sqrt</name>
        <param>
          <type>out bool</type>
          <declname>isExact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1673" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1672" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad4479534690ab890849658c0e14d9b55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Root</definition>
        <argsstring>(int n)</argsstring>
        <name>Root</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1681" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1680" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaa8350a5d0713453121ec7d652f8f71d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Root</definition>
        <argsstring>(uint n)</argsstring>
        <name>Root</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1691" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1690" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5eb08c2c46e2fde5a1f8a3846f6355f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Root</definition>
        <argsstring>(int n, out bool isExact)</argsstring>
        <name>Root</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out bool</type>
          <declname>isExact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1698" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1697" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1c0d0f46debd25cfcf7c4c0d2d85f131" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Root</definition>
        <argsstring>(uint n, out bool isExact)</argsstring>
        <name>Root</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out bool</type>
          <declname>isExact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1709" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1708" bodyend="1714"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a85bf6f68e9fca790efc089ec30812183" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Root</definition>
        <argsstring>(int n, out BigInt remainder)</argsstring>
        <name>Root</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1717" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1716" bodyend="1725"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8805d5e8dd9f91e14cae44fee365b224" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Root</definition>
        <argsstring>(uint n, out BigInt remainder)</argsstring>
        <name>Root</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>remainder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1728" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1727" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2df7be0ae9817193f387b4dc5b7c4e68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsPerfectSquare</definition>
        <argsstring>()</argsstring>
        <name>IsPerfectSquare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1736" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1735" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a645ed85cf48f9703949d479090151da4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsPerfectPower</definition>
        <argsstring>()</argsstring>
        <name>IsPerfectPower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1741" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1740" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afef01a2ed5de18ce3f4c4918e89d3af2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.IsProbablyPrimeRabinMiller</definition>
        <argsstring>(int repetitions)</argsstring>
        <name>IsProbablyPrimeRabinMiller</name>
        <param>
          <type>int</type>
          <declname>repetitions</declname>
        </param>
        <briefdescription>
<para>Uses the Rabin-Miller primality test to determine if the number is prime. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>repetitions</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1760" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1759" bodyend="1764"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad7f7a5ed3f78fb4f2894d241f0143a90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.NextPrimeGMP</definition>
        <argsstring>()</argsstring>
        <name>NextPrimeGMP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1768" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1767" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a504344bbd1ddffd3760559be3c5f107d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.RemoveFactor</definition>
        <argsstring>(BigInt factor)</argsstring>
        <name>RemoveFactor</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1954" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1953" bodyend="1958"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a570cd0e6f9fc4fce32203acdd378f34d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.RemoveFactor</definition>
        <argsstring>(BigInt factor, out int count)</argsstring>
        <name>RemoveFactor</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>factor</declname>
        </param>
        <param>
          <type>out int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1961" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1960" bodyend="1965"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a430a62c84c8de66ddf9454e08208b3d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CountOnes</definition>
        <argsstring>()</argsstring>
        <name>CountOnes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2108" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2107" bodyend="2110"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5c16f0b88ae25a5cee21964691ff024d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.HammingDistance</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>HammingDistance</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2113" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2112" bodyend="2115"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aec821a22f385285188045e3d92328264" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.IndexOfZero</definition>
        <argsstring>(int startingIndex)</argsstring>
        <name>IndexOfZero</name>
        <param>
          <type>int</type>
          <declname>startingIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2118" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2117" bodyend="2127"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af73d8adcf2c93836d58bd5e8d95a21fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.IndexOfOne</definition>
        <argsstring>(int startingIndex)</argsstring>
        <name>IndexOfOne</name>
        <param>
          <type>int</type>
          <declname>startingIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2130" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2129" bodyend="2139"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4a5f60c6411e1e2a0eff502713b955f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe override int</type>
        <definition>unsafe override int Emil.GMP.BigInt.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2146" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2145" bodyend="2163"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6966dd47d40c4cbd569c44aec448612c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(BigInt other)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2166" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2165" bodyend="2171"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a271c05f61799bb5d787a59cfa84fcc0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(object obj)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2174" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2173" bodyend="2209"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1abfb2db34e2cbedfa8418232386bc0c33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(int other)</argsstring>
        <name>Equals</name>
        <param>
          <type>int</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2212" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2211" bodyend="2214"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a079033d41b0bdd31e2328cd620d11ebd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(uint other)</argsstring>
        <name>Equals</name>
        <param>
          <type>uint</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2217" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2216" bodyend="2219"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a838e41f299d2fe15f712168f4bedec75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(long other)</argsstring>
        <name>Equals</name>
        <param>
          <type>long</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2222" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2221" bodyend="2224"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afe189300ab810b4297bacb21c2180b2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(ulong other)</argsstring>
        <name>Equals</name>
        <param>
          <type>ulong</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2227" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2226" bodyend="2229"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8109b6f15274337be22edf80dbfa4f96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(double other)</argsstring>
        <name>Equals</name>
        <param>
          <type>double</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2232" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2231" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0074d35ac4ad77cde465aa9673f9b64a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.Equals</definition>
        <argsstring>(decimal other)</argsstring>
        <name>Equals</name>
        <param>
          <type>decimal</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2237" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2236" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a137dc32c4f6dddec954a5ed7a74f74b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.EqualsMod</definition>
        <argsstring>(BigInt x, BigInt mod)</argsstring>
        <name>EqualsMod</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2242" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2241" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1abe6c868cf44f937953472e588fe69b54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.EqualsMod</definition>
        <argsstring>(int x, int mod)</argsstring>
        <name>EqualsMod</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2247" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2246" bodyend="2260"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a270c3fe468ca85dc427f6080eed9ae80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Emil.GMP.BigInt.EqualsMod</definition>
        <argsstring>(uint x, uint mod)</argsstring>
        <name>EqualsMod</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2263" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2262" bodyend="2265"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(object obj)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2606" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2605" bodyend="2640"/>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1a5b73980da80a2f4f8a7a902d104e6960" compoundref="_big_int_8cs" startline="2797" endline="2800">Emil.GMP.BigInt::Compare</referencedby>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1a3c4a1663f9562b9123b3ee9b817820cc" compoundref="_big_int_8cs" startline="2436" endline="2445">Emil.GMP.BigInt::operator!=</referencedby>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1aeb3e35d6579ea9f97b4f6f9d3364a934" compoundref="_big_int_8cs" startline="780" endline="783">Emil.GMP.BigInt::operator&lt;</referencedby>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1a59677302f3c048b9a3ae7f59060cc6ca" compoundref="_big_int_8cs" startline="889" endline="892">Emil.GMP.BigInt::operator&lt;=</referencedby>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1aaee05f272c0b7e622a154a4e38248555" compoundref="_big_int_8cs" startline="2267" endline="2276">Emil.GMP.BigInt::operator==</referencedby>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1af79f73c5986fa019050c379443ebda94" compoundref="_big_int_8cs" startline="998" endline="1001">Emil.GMP.BigInt::operator&gt;</referencedby>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1ad4a689e2860367393daddf0476103332" compoundref="_big_int_8cs" startline="1107" endline="1110">Emil.GMP.BigInt::operator&gt;=</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae61ae3a8242fbf44877744118e8514c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(BigInt other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2643" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2642" bodyend="2645"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acb1b0042cfe5392454b04c29a8018c00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(int other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>int</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2648" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2647" bodyend="2653"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afab8f92a8426bc0926d0dcb4b9d23bc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(uint other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>uint</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2656" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2655" bodyend="2661"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0440d9b2229122ff46738e732669d506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(long other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>long</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2665" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2664" bodyend="2670"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad94228c0a6fd86e0553030bcfd802c3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(ulong other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>ulong</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2674" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2673" bodyend="2679"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a01322f56c787d37474fbf56627904758" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(float other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>float</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2682" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2681" bodyend="2687"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2d187c898cea82f09f3f79ae39918f10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(double other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>double</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2690" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2689" bodyend="2695"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8a03c85a506e346d99b065462da7ef28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareTo</definition>
        <argsstring>(decimal other)</argsstring>
        <name>CompareTo</name>
        <param>
          <type>decimal</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2698" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2697" bodyend="2703"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(object obj)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2706" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2705" bodyend="2740"/>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1ab919a538243df3050daf0d9e4295f908" compoundref="_big_int_8cs" startline="2872" endline="2875">Emil.GMP.BigInt::CompareAbs</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a669eb0c96a13a483deba04701307eb81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(BigInt other)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2743" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2742" bodyend="2745"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a36b1ae7c060eeeb3a9bd4ca396a466e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(int other)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type>int</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2748" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2747" bodyend="2753"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaa79916f24b019da3cb030f6dadb40d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(uint other)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type>uint</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2756" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2755" bodyend="2761"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae632ca29d411a56180de081ebdb30e9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(long other)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type>long</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2765" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2764" bodyend="2770"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af6b10738c37b4ff3d39a193314f110fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(ulong other)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type>ulong</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2774" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2773" bodyend="2779"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a808cc274a1e9fd00648ae8f6e30d202e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(double other)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type>double</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2782" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2781" bodyend="2787"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac7ddbae1eb9ab92a043b0386e5ab3c0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Emil.GMP.BigInt.CompareAbsTo</definition>
        <argsstring>(decimal other)</argsstring>
        <name>CompareAbsTo</name>
        <param>
          <type>decimal</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2790" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2789" bodyend="2795"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a66cc175bd7db90fd6f89141e5f5c075d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>BigInt Emil.GMP.BigInt.Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3220" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3219" bodyend="3222"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1abfaa1f7a97f4fbae61be133c39835d5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] Emil.GMP.BigInt.ToByteArray</definition>
        <argsstring>()</argsstring>
        <name>ToByteArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3229" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3228" bodyend="3246"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a99c27398e3563fcf14afa698296b390a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] Emil.GMP.BigInt.ToByteArray</definition>
        <argsstring>(out int sign)</argsstring>
        <name>ToByteArray</name>
        <param>
          <type>out int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3249" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3248" bodyend="3281"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae5c0b2eab5993f5cbc2412fd99ac0a33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint[]</type>
        <definition>uint [] Emil.GMP.BigInt.ToUIntArray</definition>
        <argsstring>()</argsstring>
        <name>ToUIntArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3284" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3283" bodyend="3301"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad85cdd7fd8db7d16334d828de3ed6a0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint[]</type>
        <definition>uint [] Emil.GMP.BigInt.ToUIntArray</definition>
        <argsstring>(out int sign)</argsstring>
        <name>ToUIntArray</name>
        <param>
          <type>out int</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3304" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3303" bodyend="3344"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a114d8c939c8852c8b55e46b8e136c789" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override string</type>
        <definition>override string Emil.GMP.BigInt.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3347" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3346" bodyend="3349"/>
        <referencedby refid="class_emil_1_1_g_m_p_1_1_big_int_1ab094d7a4b26a685a921783f4594458d8" compoundref="_big_int_8cs" startline="3205" endline="3208">Emil.GMP.BigInt::operator string</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a857ef6a3eeb95550fb3a37840fdb12d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Emil.GMP.BigInt.ToString</definition>
        <argsstring>(int @base)</argsstring>
        <name>ToString</name>
        <param>
          <type>int @</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3352" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3351" bodyend="3363"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a28499bdda0ff658af349ae66fc2b9223" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator-</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="535" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="534" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab6fee7a722cdeee266a42bfb9c0b353a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator~</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>operator~</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="542" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="541" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac9e1e03dea52bd7ece2b2afbb501c4fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator+</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="549" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="548" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4cb1450e4fbe250da244950a35d73816" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator+</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="556" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="555" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0bedb203654cda770cd7871a6910d46c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator+</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="572" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="571" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2a2f15a4dcbdb62dbff8c15aa8d1866f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator+</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="587" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="586" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a49ce0a6b09906ef8119b0a58aa3f4842" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator+</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator+</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="594" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="593" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae42059c99cdbaca0df775b07cc7bc85c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator-</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="601" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="600" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1abf50a3c498b5c51d8ec1ea654fe2991a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator-</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator-</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="608" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="607" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a35e5e5883c8118562e6cfbb3a5d6dc2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator-</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="625" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="624" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1d94afdc628f49106c011e0002bd4a72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator-</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator-</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="642" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="641" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afd336a8abcd07e8ac9e01e2ae7134978" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator-</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="649" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="648" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aea91b351e22a2109998108ff1f96b1ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator++</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>operator++</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="656" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="655" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaf7e258d4dcac4e4ae1b75622c55ae40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator--</definition>
        <argsstring>(BigInt x)</argsstring>
        <name>operator--</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="663" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="662" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae1a955579a9d2054ccad78e1c13bba7d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator*</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="670" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="669" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a357ee61b03ec7477f85830c7ac331b22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator*</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="677" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="676" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa3f8d04340a12da7ebfbc5c659b6f5e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator*</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="684" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="683" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a886e60c01da86f141d045efe4cae8a55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator*</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator*</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="691" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="690" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9f6fe004d8bd67cb0f7ff933ca571196" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator*</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="698" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="697" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3f64ebf26ff9d4516674b315b2e8226c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator/</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="705" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="704" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af9de8eb18c1c261204b82a41e6fa4e9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator/</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="712" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="711" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aafa57a8f8d1e23c7a4e5b9d304d71447" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator/</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="729" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="728" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af1521f286e687810c68d33b3b43850a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator&amp;</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="736" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="735" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac61e5c2a20a6edc1dcb1092f7d507a63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator|</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator|</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="743" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="742" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a042aadee93c7d0cfc4faed7d3fea63c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator^</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator^</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="750" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="749" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1a3c728e6c4a26e320396a88290af4fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator%</definition>
        <argsstring>(BigInt x, BigInt mod)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="757" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="756" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac0f74f2fc0f45774d83d742d1bddd77b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator%</definition>
        <argsstring>(BigInt x, int mod)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="764" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="763" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acb069a51bb87b6b6f4e71ed4a7287969" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator%</definition>
        <argsstring>(BigInt x, uint mod)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="774" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="773" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aeb3e35d6579ea9f97b4f6f9d3364a934" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="781" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="780" bodyend="783"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a454560d435c1131f23e94275083f6e14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="786" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="785" bodyend="791"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a42cba141b99ff7e93bf11a737f29f439" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="794" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="793" bodyend="799"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4aa1ab3a7026b639d8c52179b211d76a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="802" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="801" bodyend="807"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad3772c12ac4ac8688e3013e309cd0893" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="810" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="809" bodyend="815"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2310cb9e43ab68fd3ee13602ad57c339" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="819" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="818" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1aa7f41ca88db72416874dbb5c5c1dcf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="825" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="824" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa7f2b15d3294dc0d034d1b0f8f479d6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="831" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="830" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a76efdc7708a595476a4c0cdde0f08190" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="837" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="836" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaf218622343b403d54ae87093dc572c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(float x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="842" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="841" bodyend="847"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab37e2c3aa277f8b39b3ba38c7145f9a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, float y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="850" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="849" bodyend="855"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a127ba3e611e4136bc61f1f7f6d360955" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="858" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="857" bodyend="863"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8566ba96f2f1ce57607bb3b58b4222c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="866" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="865" bodyend="871"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6d4807981bc41bb100e08c42957afa46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="874" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="873" bodyend="879"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6edbb8c78f76ee7bf0cfb6a42509b4ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="882" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="881" bodyend="887"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a59677302f3c048b9a3ae7f59060cc6ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="890" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="889" bodyend="892"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a44aea34ee6142757cf5cf28617025532" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="895" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="894" bodyend="900"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a38733a21790c9e7cd08cad1a9c2821ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="903" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="902" bodyend="908"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9d4d1a6dc3019295bd499a60b81f2903" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="911" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="910" bodyend="916"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3d505f86df16a6494a874e547f2909ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="919" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="918" bodyend="924"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa93b44dcf7fcfcd8cc1ae0607b5326e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="928" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="927" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a660120bc236f48d7d42eb95c5cd5e040" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="934" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="933" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aef051c2110cd965f6c172439f0467cf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="940" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="939" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3582474dd94e29f495e7697818088aa5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="946" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="945" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4dd099d98ff6c6d88575d4b613aac5fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(float x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="951" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="950" bodyend="956"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af2b531a1a4df6bcd2375b7bc93167700" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, float y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="959" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="958" bodyend="964"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1adf564c64167099faad46715fc99e543e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="967" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="966" bodyend="972"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acc71fb6c8991f8d05349bca014a9a3a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="975" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="974" bodyend="980"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a502ee0eb5c54981c01f6717d84d5d420" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="983" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="982" bodyend="988"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aedb14b1cddc46cb7cc12301d50ee2885" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&lt;=</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="991" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="990" bodyend="996"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af79f73c5986fa019050c379443ebda94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="999" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="998" bodyend="1001"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6099d02b6b8969350e92caa7c2f54d53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1004" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1003" bodyend="1009"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8eb91ca0779dd43deb6f7f2074236878" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1012" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1011" bodyend="1017"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae7d1ae55f784e7be4571f4bf12e0e258" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1020" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1019" bodyend="1025"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af8681b93f3951bf5c5206b81b836219b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1028" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1027" bodyend="1033"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8cdc8f4a15e8b10b1015fb07005aaf54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1037" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1036" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af93e61cb47480e6f9995f9609c20295f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1043" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1042" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af7a7be0233e4bf36718fbf732a0e3667" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1049" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1048" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af79f1f62d246845b8995527102cb66d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1055" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1054" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a85c3ba4219b3d72c110fb77a381453e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(float x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1060" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1059" bodyend="1065"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5f3b29d6b4fd78aa1a34b5de3bacbe95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, float y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1068" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1067" bodyend="1073"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a30159d49b89862be79d8e96abafce2e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1076" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1075" bodyend="1081"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a023f53fc5aa24725bb57b80b3a19c32d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1084" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1083" bodyend="1089"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a59274261bc987b100dc2e08a118a228e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1092" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1091" bodyend="1097"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8ec0921ab64c7ebfea3d131214229bd5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1100" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1099" bodyend="1105"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad4a689e2860367393daddf0476103332" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1108" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1107" bodyend="1110"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aec950f59a9b83f21364c868da34d4288" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1113" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1112" bodyend="1118"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6ccc34b7aa2c91cec6f71687585c2cac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1121" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1120" bodyend="1126"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ade1bd6b7fc5f3c6dd0e271a9e095cc23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1129" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1128" bodyend="1134"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3285f342ea0f47799eaa7e69b325d0fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1137" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1136" bodyend="1142"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3fdf551dbf49ac0ff8c2f7ddc1bd3888" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1146" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1145" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2ce92748e15aec9fcd317c6c95b26132" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1152" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1151" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab52a00a7e236bcecae63c1f2e78ca7f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1158" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1157" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af8c719dc8d2d8861e662b2818849ee74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1164" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1163" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4bc23612986efb62e91ddd581fd92c8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(float x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1169" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1168" bodyend="1174"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac1ccca09cb94dfa614db39a6b03019dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, float y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1177" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1176" bodyend="1182"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1c89ae5a91dfb5ebf0155108805e80fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1185" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1184" bodyend="1190"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a965ae2ab044d3df09420d108845507e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1193" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1192" bodyend="1198"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ade1b958d06671411fa21fdb47d35abfd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1201" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1200" bodyend="1206"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3a483f16660e6ac3f7746f3486903bfd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator&gt;=</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1209" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1208" bodyend="1214"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a2119da62d925c9d61cc998f5162eefdd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator&lt;&lt;</definition>
        <argsstring>(BigInt x, int shiftAmount)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shiftAmount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1217" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1216" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab73b9d2b4e4d669c03b6dd0525bfa65f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.operator&gt;&gt;</definition>
        <argsstring>(BigInt x, int shiftAmount)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shiftAmount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1224" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1223" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5564f72ab93cf41989df66dd332360b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Power</definition>
        <argsstring>(int x, int exponent)</argsstring>
        <name>Power</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1573" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1572" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a8103957660e3ee6d646182885175b511" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Power</definition>
        <argsstring>(uint x, uint exponent)</argsstring>
        <name>Power</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1583" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1582" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7960896692a4aba7eeebcc72e9a93b99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Gcd</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>Gcd</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1775" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1774" bodyend="1779"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5660f325920cff44e7656697b1ac582d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Gcd</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>Gcd</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1782" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1781" bodyend="1791"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa03b5ba0ba66350389e1899b9f3c2198" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Gcd</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>Gcd</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1794" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1793" bodyend="1803"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a65068fa6d5926e57728f37cb0be13465" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Gcd</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>Gcd</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1806" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1805" bodyend="1810"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad08303062c292a53260bd5cc24e50c47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Gcd</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>Gcd</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1813" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1812" bodyend="1817"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5290d2b91bdb6cdad226844cb113d1c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Gcd</definition>
        <argsstring>(BigInt x, BigInt y, out BigInt a, out BigInt b)</argsstring>
        <name>Gcd</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1820" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1819" bodyend="1826"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a968b8e41c7ca382f1eee8973dd3ff7d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Gcd</definition>
        <argsstring>(BigInt x, BigInt y, out BigInt a)</argsstring>
        <name>Gcd</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1829" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1828" bodyend="1834"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9c19cb65b810263fc2554acd303b2dcf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lcm</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>Lcm</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1837" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1836" bodyend="1841"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a99445bee50cfd428574837c882717de8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lcm</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>Lcm</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1844" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1843" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4117a9342243d5e032093c493179ec3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lcm</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>Lcm</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1856" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1855" bodyend="1865"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad345c0d3e90c61eed49a860623740747" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lcm</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>Lcm</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1868" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1867" bodyend="1872"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af9862dcfa292d76f026c54e69b8d5bfc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lcm</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>Lcm</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1875" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1874" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a404a1aa278925216f89810cd428fcc15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.LegendreSymbol</definition>
        <argsstring>(BigInt x, BigInt primeY)</argsstring>
        <name>LegendreSymbol</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>primeY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1882" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1881" bodyend="1886"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a39b87adf0d492c810cb93c30776f52d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.JacobiSymbol</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>JacobiSymbol</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1889" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1888" bodyend="1894"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1ae30bf01c3a175e15a046502940d59195" compoundref="_big_int_8cs" startline="1634">Emil.GMP.BigInt::IsEven</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aabf5982779178c46086ded981499d22d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.JacobiSymbol</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>JacobiSymbol</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1897" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1896" bodyend="1902"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a524fab164cef5441c0aeb7f39c4be888" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.JacobiSymbol</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>JacobiSymbol</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1905" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1904" bodyend="1910"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1ae30bf01c3a175e15a046502940d59195" compoundref="_big_int_8cs" startline="1634">Emil.GMP.BigInt::IsEven</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4834a77e792eb9709861ed09c359bf7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.JacobiSymbol</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>JacobiSymbol</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1913" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1912" bodyend="1918"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1adccbcf7dbec00cfdcbf21428951ed402" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.JacobiSymbol</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>JacobiSymbol</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1921" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1920" bodyend="1926"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1ae30bf01c3a175e15a046502940d59195" compoundref="_big_int_8cs" startline="1634">Emil.GMP.BigInt::IsEven</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0fe941c418a672c9be8d0d485bd180a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.KroneckerSymbol</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>KroneckerSymbol</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1929" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1928" bodyend="1931"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9a0eb255970db6e6f776426743b4626d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.KroneckerSymbol</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>KroneckerSymbol</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1934" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1933" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acbc93c09acacd37cae0353be0a1a2cc1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.KroneckerSymbol</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>KroneckerSymbol</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1939" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1938" bodyend="1941"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad253d79a2ec48739908d146f403e3b9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.KroneckerSymbol</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>KroneckerSymbol</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1944" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1943" bodyend="1946"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a536a196d5460d36162806b7dd6c013b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.KroneckerSymbol</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>KroneckerSymbol</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1949" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1948" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a14527e4a21e420d5ac5300ae48c1ff63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Factorial</definition>
        <argsstring>(int x)</argsstring>
        <name>Factorial</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1968" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1967" bodyend="1975"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a23eaf1a805400756113137185f088c26" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Factorial</definition>
        <argsstring>(uint x)</argsstring>
        <name>Factorial</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1978" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1977" bodyend="1982"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3f91281c79ec8db79d5aac370692b075" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Binomial</definition>
        <argsstring>(BigInt n, uint k)</argsstring>
        <name>Binomial</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1985" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1984" bodyend="1989"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af31840c2fe728d80ec62d9be55708272" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Binomial</definition>
        <argsstring>(BigInt n, int k)</argsstring>
        <name>Binomial</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="1992" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="1991" bodyend="1999"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1f72e3e52490f599dc7f19c09912edf3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Binomial</definition>
        <argsstring>(uint n, uint k)</argsstring>
        <name>Binomial</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2002" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2001" bodyend="2006"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4d10fd7b1578f0b4fdb686479ea46dd2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Binomial</definition>
        <argsstring>(int n, int k)</argsstring>
        <name>Binomial</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2009" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2008" bodyend="2029"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a93b14959a3271e168ce6f8126249351d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Fibonacci</definition>
        <argsstring>(int n)</argsstring>
        <name>Fibonacci</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2032" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2031" bodyend="2039"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae66b9f2e1696eb04e0cc9553d01a8709" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Fibonacci</definition>
        <argsstring>(uint n)</argsstring>
        <name>Fibonacci</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2042" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2041" bodyend="2046"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0ab3e7c6befee94b9d73ec6eb3db0e46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Fibonacci</definition>
        <argsstring>(int n, out BigInt previous)</argsstring>
        <name>Fibonacci</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>previous</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2049" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2048" bodyend="2057"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a58ebe352d7d94b244a65021db41028c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Fibonacci</definition>
        <argsstring>(uint n, out BigInt previous)</argsstring>
        <name>Fibonacci</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>previous</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2060" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2059" bodyend="2065"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3ba1f06a5b7dc5e22cc4f4342b89ff3c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lucas</definition>
        <argsstring>(int n)</argsstring>
        <name>Lucas</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2068" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2067" bodyend="2075"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad95f375815c51fd2412676482eae3225" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lucas</definition>
        <argsstring>(uint n)</argsstring>
        <name>Lucas</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2078" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2077" bodyend="2082"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a990f4e1c3b600087b2c17257289bb880" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lucas</definition>
        <argsstring>(int n, out BigInt previous)</argsstring>
        <name>Lucas</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>previous</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2085" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2084" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad6f25bc9b1d75694f13c95353ea81baa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
        <definition>static BigInt Emil.GMP.BigInt.Lucas</definition>
        <argsstring>(uint n, out BigInt previous)</argsstring>
        <name>Lucas</name>
        <param>
          <type>uint</type>
          <declname>n</declname>
        </param>
        <param>
          <type>out <ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>previous</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2096" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2095" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaee05f272c0b7e622a154a4e38248555" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2268" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2267" bodyend="2276"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a587231877430b5d4b3589bd79ab62cd8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2279" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2278" bodyend="2287"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac7e2cf3f1494c97dbd90485ea2c513e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2290" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2289" bodyend="2298"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab95e15807938613123d12a13dab186b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2301" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2300" bodyend="2309"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab8cef0400f87e10d334c8ebb88a4c78e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2312" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2311" bodyend="2320"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0cba33e54c201955f471e6aa82084a26" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2324" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2323" bodyend="2332"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9ac4cf4d8ad466889b34512a75cc1d04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2336" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2335" bodyend="2344"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a070a4d460f0b9b7acc8299ccc849f973" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2348" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2347" bodyend="2356"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a95ec785a07c2f19efe2af4b4495f821a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2360" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2359" bodyend="2368"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0b6feb67ed2f8058dcb02879227f6803" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(float x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2371" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2370" bodyend="2379"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a08fd43e60cb7a7ea0a064df75cbe63db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, float y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2382" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2381" bodyend="2390"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a17f9a39d40d1065788c67cf47240a0bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2393" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2392" bodyend="2401"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a72b11c1b94b64dd34076d62e7f5e032c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2404" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2403" bodyend="2412"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9c1d19910255f67bfdb92585c9b10648" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>operator==</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2415" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2414" bodyend="2423"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac7ddd805c25022c9a1600f29c0621277" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator==</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2426" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2425" bodyend="2434"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a3c4a1663f9562b9123b3ee9b817820cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2437" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2436" bodyend="2445"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a98a38c4ac0f47360fd4d044546d36b61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2448" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2447" bodyend="2456"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1addce3c693941eeb2c19324be59da7805" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2459" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2458" bodyend="2467"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af2bba89ba756ca62a867892b0af39249" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2470" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2469" bodyend="2478"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a48eab50df8494f86ce80b1cb83011dd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2481" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2480" bodyend="2489"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9b7fb2fa873b6074d6972d71bbf72645" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2493" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2492" bodyend="2501"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af6ee9e713f2d0091d6ce37daa6bef587" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2505" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2504" bodyend="2513"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a4c0e0d56e032ef5239c8c9aaee996228" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2517" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2516" bodyend="2525"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a1af9c3d22a61663945a46d62ae890dd7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2529" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2528" bodyend="2537"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa67b325d4f5e1b874a57468132e5d816" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(float x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2540" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2539" bodyend="2548"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a56d3379ecbc999d93402ec38a0fa518a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, float y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2551" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2550" bodyend="2559"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a01f1bc0761dadf8157241923c49531a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2562" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2561" bodyend="2570"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5a8443e7c972ec4503d9e8d193fc99ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2573" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2572" bodyend="2581"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a59a11263b7daf111e722b4012559792a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2584" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2583" bodyend="2592"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1afca9c2976511d761e2d8cd44c40b1b70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Emil.GMP.BigInt.operator!=</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2595" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2594" bodyend="2603"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5b73980da80a2f4f8a7a902d104e6960" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, object y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>object</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2798" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2797" bodyend="2800"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aa44042505bcf4ccbaa63c89a37d1e9a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(object x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type>object</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2803" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2802" bodyend="2805"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a963d32c98f7af07cdd25fe3213826ceb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2808" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2807" bodyend="2810"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7679f97ceda87ef1c8bae70d2da2d771" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2813" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2812" bodyend="2815"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a22bb58ce4968435bbd97574932160e2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2818" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2817" bodyend="2820"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a61230544e33025598f6919984ab34fd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2823" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2822" bodyend="2825"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6783576f3e3e226951dea114e272ed03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2828" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2827" bodyend="2830"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a314206adf3d2101ecf51070e7a51ed84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2833" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2832" bodyend="2835"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a06193d3791744f9c65a655eb812a0986" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2838" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2837" bodyend="2840"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af54b6a211828adbe4b70da842254f2ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2843" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2842" bodyend="2845"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aad8f72c6603d9187001c30f1e3e91434" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2848" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2847" bodyend="2850"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac571cecac4344d7fe9082539955670d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2853" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2852" bodyend="2855"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7cb1753de5a5cce1e50e4c338c320b88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2858" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2857" bodyend="2860"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acfe571f874e08b0ff3dbe6ea5a499450" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>Compare</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2863" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2862" bodyend="2865"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6461a369ea80908f5bb379a57225e9eb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.Compare</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>Compare</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2868" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2867" bodyend="2870"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" compoundref="_big_int_8cs" startline="2605" endline="2640">Emil.GMP.BigInt::CompareTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab919a538243df3050daf0d9e4295f908" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, object y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>object</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2873" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2872" bodyend="2875"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab42e6d9e5fb19b306a2b85f8030afc58" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(object x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type>object</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2878" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2877" bodyend="2880"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad225c999d5259e71a9575a5eec2cdaaa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2883" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2882" bodyend="2885"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a43e313f6a88823a27e256aeea16ad158" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, int y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2888" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2887" bodyend="2890"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aed854eab25cb46f10d97d873f786f07d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(int x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2893" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2892" bodyend="2895"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a13cd5856b66d3571f61e43925011782d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, uint y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2898" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2897" bodyend="2900"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aaec6922fda3448c8f3bda63c3b80bbe8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(uint x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type>uint</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2903" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2902" bodyend="2905"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1adbba17f39d206cc68f594ffd071cb055" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, long y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2908" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2907" bodyend="2910"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae4e388e896dfff9d44b7135c887603ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(long x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2913" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2912" bodyend="2915"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aedf8cd7c147b8bbb4e91ab04c501e45d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, ulong y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>ulong</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2918" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2917" bodyend="2920"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a80b61c64b5108e01c5a1b56a04e9c3c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(ulong x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type>ulong</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2923" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2922" bodyend="2925"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a0c955befd61bef85413ce18958b6a03b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, double y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2928" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2927" bodyend="2930"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a41494064b87f0d7be3bc3169b1b4a3fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(double x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2933" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2932" bodyend="2935"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acf7f7b47bcbc235338089ccfe58a733e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(BigInt x, decimal y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>decimal</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2938" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2937" bodyend="2940"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae701b3a887e4c1edb7577e45e84dfecf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Emil.GMP.BigInt.CompareAbs</definition>
        <argsstring>(decimal x, BigInt y)</argsstring>
        <name>CompareAbs</name>
        <param>
          <type>decimal</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2943" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2942" bodyend="2945"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" compoundref="_big_int_8cs" startline="2705" endline="2740">Emil.GMP.BigInt::CompareAbsTo</references>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a202c4acbd79920cacf6d213387f2adb5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(byte value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>byte</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2952" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2951" bodyend="2954"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac97b2e3ba47abd214893e4dadbfc8d14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(int value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2957" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2956" bodyend="2984"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac0505225b9500b072821e0d60726e604" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(uint value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>uint</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="2987" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="2986" bodyend="3004"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a7b2a5c1cb0f5b26e82a5aa8c88ec52f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(short value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>short</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3007" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3006" bodyend="3009"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a15457c503028401b95dc033f4d989d5e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(ushort value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>ushort</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3012" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3011" bodyend="3014"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1acdbb38b15ba8e56495b115b9a6872f7d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(long value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3017" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3016" bodyend="3019"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a77837e7cf7f56be05c651cd236c290df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(ulong value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>ulong</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3022" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3021" bodyend="3024"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a133fe84da279036bd270fe9a6de97c88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(float value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3027" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3026" bodyend="3029"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a54e24826bae30b910e6a15a632114258" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(double value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3032" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3031" bodyend="3034"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1aade13767781d378cb14012a92e100565" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>implicit</type>
        <definition>static implicit Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(decimal value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>decimal</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3037" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3036" bodyend="3039"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a35b69ee709735c2fdbebfb21ff234dd7" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator BigInt</definition>
        <argsstring>(string value)</argsstring>
        <name>operator BigInt</name>
        <param>
          <type>string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3042" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3041" bodyend="3044"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ac316c49d9e18b120bfa887e4810cede9" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator byte</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator byte</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3047" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3046" bodyend="3049"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a5c43698a9bd2526102b0e45e0eafe4a1" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator int</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator int</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3052" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3051" bodyend="3073"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a002963903d9ed75c100d3383b0f96ebf" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator uint</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator uint</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3076" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3075" bodyend="3097"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1af7a3575578aabe2d63ac1a6266ea579c" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator short</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator short</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3100" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3099" bodyend="3102"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a222b960c145319af132257dd7c80d2c2" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator ushort</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator ushort</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3105" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3104" bodyend="3107"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a9a5e3d28ff75f9997dc5bc3d78ae0c0e" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator long</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator long</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3110" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3109" bodyend="3148"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ad5c4414776284911786bc5177d21fae2" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator ulong</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator ulong</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3151" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3150" bodyend="3188"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a13f0c82fd307950a6d40daeb28e787f6" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator float</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator float</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3191" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3190" bodyend="3193"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ae1c5b095699084d58c6476e5eab6efa4" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator double</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator double</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3196" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3195" bodyend="3198"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a60885e627e2188b8f7a7b212fbded2bf" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator decimal</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator decimal</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3201" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3200" bodyend="3203"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1ab094d7a4b26a685a921783f4594458d8" prot="public" static="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static Emil.GMP.BigInt.operator string</definition>
        <argsstring>(BigInt value)</argsstring>
        <name>operator string</name>
        <param>
          <type><ref refid="class_emil_1_1_g_m_p_1_1_big_int" kindref="compound">BigInt</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3206" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3205" bodyend="3208"/>
        <references refid="class_emil_1_1_g_m_p_1_1_big_int_1a114d8c939c8852c8b55e46b8e136c789" compoundref="_big_int_8cs" startline="3346" endline="3349">Emil.GMP.BigInt::ToString</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a6fcdf5cc8ea335767fa55c8ec9f0249e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe bool</type>
        <definition>static unsafe bool Emil.GMP.BigInt.IsZero</definition>
        <argsstring>(uint[] x)</argsstring>
        <name>IsZero</name>
        <param>
          <type>uint[]</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3520" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3519" bodyend="3537"/>
      </memberdef>
      <memberdef kind="function" id="class_emil_1_1_g_m_p_1_1_big_int_1a112e69bebb3a4642b19866286329fe19" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe bool</type>
        <definition>static unsafe bool Emil.GMP.BigInt.IsZero</definition>
        <argsstring>(byte[] x)</argsstring>
        <name>IsZero</name>
        <param>
          <type>byte[]</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="3541" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="3540" bodyend="3558"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1659">
        <label>Emil.GMP.BigInt.MpzValue</label>
      </node>
      <node id="1658">
        <label>Emil.GMP.BigInt</label>
        <link refid="class_emil_1_1_g_m_p_1_1_big_int"/>
        <childnode refid="1659" relation="usage">
          <edgelabel>InternalValue</edgelabel>
        </childnode>
        <childnode refid="1658" relation="usage">
          <edgelabel>NegativeThree</edgelabel>
          <edgelabel>One</edgelabel>
          <edgelabel>Ten</edgelabel>
          <edgelabel>Two</edgelabel>
          <edgelabel>Zero</edgelabel>
          <edgelabel>Three</edgelabel>
          <edgelabel>NegativeTwo</edgelabel>
          <edgelabel>NegativeOne</edgelabel>
          <edgelabel>NegativeTen</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" line="12" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Emil.GMP/BigInt.cs" bodystart="11" bodyend="3561"/>
    <listofallmembers>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a634a09a4f057fdddc67934ac20205177" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_abs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1bee71dae07d3d0a6719a5ba4be6b0c9" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_add</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4f52489f443343ee8034abf112746c5e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_add_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0ef3b75c05ab3b8631c1b77d00110866" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_addmul</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a28640444f9aaa97e644b9e8524e2caba" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_addmul_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af244a1b9c8b1ae14e5e042a0dc203044" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_and</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a88c7cb442d2a74741db305cfab19ae29" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_bin_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af2c228124b669a9ac136f1ee2df676e1" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_bin_uiui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aba6ce84c72e7a49fba7845fcf83a2bf0" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_q</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac8d266579b75832a8ed518bcdba766d8" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_q_2exp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a918cb3ce909d8673dcdbfc02bfb0b10b" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_q_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a786a2fe6b2f3dc85f89633f96e923661" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_qr</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad3d92ae77618c577a25b582009d8e4d6" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_qr_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac8d98cb1fc311f29bdce83072802a622" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_r</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a12305b4a5dfc8f3da3465a3e21841817" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_r_2exp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a00e7358c0a283fd4b854534fed5c5fd9" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_r_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa0bc56f04224b2696f091d8e391d53a8" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cdiv_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aca022ab6d68eb10eedf9ece0a92d0a36" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_clear</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad5c0eb182decd23a0a82fa5f834883ed" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_clrbit</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae875734e2d604ec0b3e37f25eafa4532" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cmp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4a0f0bc671177308fd2ccea745e6d5a7" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cmp_d</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae27906923fb2be20dbd1438f4f1bf8d4" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cmp_si</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a763e0870936e3c48fbb9c835e1352d6c" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cmp_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1351ccacfb3886c3393a82b94720cb70" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cmpabs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8e1aab039b73d0f4b9832e185926ab53" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cmpabs_d</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8d66cd102854665859a09dff2c7bc18f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_cmpabs_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a27714b4a2df074c9ed8e06c12e465b63" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_com</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa00db9b6eba604023c40454289353118" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_combit</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8beea78146d63668b0b5991d827e2a27" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_congruent_2exp_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aadd2c09acd783c0122e8aedca9fc2357" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_congruent_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3198e0dbe8ae338a65b221b7501f581b" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_congruent_ui_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad66a8512423831328da19bcbef13d1ce" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_divexact</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7fbd2f9cb1f4deac3e25101bb21f2d01" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_divexact_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a17dcb1b788b262417e22b29e2312e077" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_divisible_2exp_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a76cfcfcf3a7ab46a232ecb811c4ac32a" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_divisible_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2739f1b759b489f8630a189bc66cef34" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_divisible_ui_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aefeffae7d2af812f14fcfc491e84a089" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_export</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a886411f4c21a67c0b5770fee19bf5443" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fac_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a90e7da5abca0755a14f88999a8834dda" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_q</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a75c465c96cf3d40010917e38e8b8a729" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_q_2exp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a05a42a6b4f6b0ecb1f86dd2ce2ab8c2f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_q_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0b143a1479a706f4bf5305bbdfd92595" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_qr</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab97509e0f333a87145645d7c37d9ee30" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_qr_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aeb4725d858e5437c6bdec51698a01bfe" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_r</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa84852276d6e83adb755fb8a369d43fc" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_r_2exp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad0808eb913e6d588594df24d3f35073c" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_r_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a169ca74205264e5bf8398312a322d50d" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fdiv_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac382874cb2c298a26479437e0c33825d" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fib2_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8a15b3654c5e20147c44e66c84303e61" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_fib_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1b42ad9372b808e44f88da5c3e376c45" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a36c06abdd7f9f291549bebe4307fb1b4" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_gcd_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a457568673f6a6cb33cb760e2263e5d13" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_gcdext</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a103fa96001326cf80048fb6899a8ac8f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_gcdext</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a79e7a2e04f69ac27b4f042e8a6bfd513" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_get_d</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a65cf229da68b5ea1099901469ac347db" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_get_si</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a92f4f6adadc842b77161821771ff69ff" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_get_str</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9649bfa803d2f2faa56c4a5744e02c43" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_get_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1adf5c61d76749b761cc8f78ef29c704a7" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_hamdist</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aafb837211cf7d39fb2e535ee9cec2db3" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_import</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa76cb0540e7eef40febced0a7249b1e0" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_init</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a88fee5a5d4e641293cfeb09f15863af5" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_init2</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a302ef471e5e1a810cb7585b5db913734" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_init_set</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a074c83ab5c757d3e44cc07e4c39eed88" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_init_set_d</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1adcdc31a521a25956db7594ef9cab4bd1" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_init_set_si</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac667d9a5f73f08ab3f62eec349a3777e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_init_set_str</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a43bfb55630d3373a851a37dcc4478e76" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_init_set_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a08f2adb2f5f88b7838df3d39be827ee1" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_invert</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1adda27e30f19dc2283c42139ce1342469" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_ior</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2656bb28863cf6bb9a7535a0f79a48d6" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_jacobi</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6a4f008f9e5ae6ca9fcae539a6a1daf3" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_kronecker</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af219fd7d16d864af5b886627340d1dbd" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_kronecker_si</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a047956baf815aba98762418702a67ed9" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_kronecker_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a45484b598d05af499b47b0a212646b14" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_lcm</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0dc9b07034be276e5275471ad20a0ed7" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_lcm_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9ea22c29d531c196934c7ebc0953b345" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_legendre</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3bc70238b11ed3248583ef1500ad2829" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_lucnum2_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aae428f8c94405bcee1e5536de428e040" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_lucnum_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a893201fc42c44642389aa4fb626edaab" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_mod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5794d9cf94fabf8488bf7f08304f650a" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_mul</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a89490e6915876557b1df9e644a7c6297" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_mul_2exp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9c6dc716a28110a0774ad42ee8f4f532" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_mul_si</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aea8a25cbf9a64fa5b8f01031232ff7d7" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_mul_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a412be5bdcce5c1f8492ce2f0a2b34965" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_neg</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab423c9b96fe3a45e292fec1f02bbf58a" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_nextprime</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a88740fc5e9484c811ad3f77ba16dbe5a" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_perfect_power_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad6caf3eb4a7ce46b76e4743e9f9885df" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_perfect_square_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae1ed7ac76347c38bca1c4f0a15a35e9e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_popcount</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a44edf4da9c4846e6410444d5cca000b9" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_pow_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a38f9f42a13c46999850c66d644b0174a" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_powm</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a38397e273ceb5288e90b55277da7491f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_powm_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af88d62f56c9bfab25ed0d7ce411a382c" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_probab_prime_p</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a46070ebe0c37f412b16e9c71c12ddaa6" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_remove</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4b4ebd56db89dbc7c17c81e1c000a9a0" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_root</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af05a28b9827ea011a761343e50d6cf73" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_rootrem</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac70b4a13981982d4d3f0200c46130dec" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_scan0</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af76e0d6033961fa92b6ec47d263fc616" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_scan1</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a07962e96442ffb37d42f8eca82e1dc0f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_setbit</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab5603870077a4c0508c2a63927dcfe1e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_si_kronecker</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a51984a32b36a1cae7fc5af2063be8624" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_sizeinbase</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaceb3712257d1fe83f9a971d16cc3445" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_sqrt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac82718a1714cd3c4481d4b8f67aefc08" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_sqrtrem</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a42dcfc354c7a78428b252b5887666a48" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_sub</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a68551ea93e757aafac082e195ad3b60a" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_sub_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af8b71c8c1c373d97e375ed1c27e6684b" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_submul</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2d6964ca2a9cffa2a79b7d71ef4fddf3" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_submul_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae67ba32c990969c0927694d48bf3d758" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_q</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a05e9f8150ce1a8bfc647a35dc0c9915b" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_q_2exp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a902f8826b0c5f249f531728e8034a031" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_q_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afc1c0f893f630abd4e9e7c03ad7e93af" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_qr</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9317c0bd0997cd357aeeedec30fd9eb5" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_qr_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a94b3fffeff90dbe0f4778b9d73e0baec" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_r</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac9ddd9bed18e9c2b2a02bb70c5344d0f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_r_2exp</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa83291d72c805054d099f42f83d7cff0" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_r_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4c92c98abcf70e4556c29a41c53e737d" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tdiv_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7c76b3b77b81d2469aac063e0ab439c8" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_tstbit</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6d1286d49413991260734bd1442b441e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_ui_kronecker</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5e0da5efb81cd6556ee54700255b1865" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_ui_pow_ui</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4202fd8348f70a7520db7137875a99f1" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_ui_sub</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a20c19d6d970695b5f43777c085b90b8c" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>__gmpz_xor</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a289e2e4c7fc72a33d3bf438c478e3d43" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Add</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a97779cd27e711f53ad841c9b1778e968" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Add</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aca1293439fda984da9f40f4bb8bd8c16" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Add</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa407c6401eea0ff38dea69ca82f24c2f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>And</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad318fe480cb8a0e1472e9ac3243cf7ed" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab1a8a1f22251b6d9f87901db79ce1922" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad33ee091620688288cc1d16e11aaa2d9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a763c3e6017a8ebc27dd492bf0fdab7eb" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a84017016705d8b1f448bad9ba8d02280" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad5454669adb66701a6c8ac2dcbeb1d1d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab0df1a9138c72d87be3700d52c55e4b1" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad0088a7f548f14e06a5c2ecead53f9eb" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a723d6e39e6242deecd370d59407cf345" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0d710f2e879006c67b30bd3a8485adc5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3b82c9f63ba109d585c9aa0066dbc3ee" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2ff9c5817da77a6984dbfccdb9ec1aaa" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa41a6528e626518f0b87952a6d87bddf" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad65b2164ce41235b04b1e62b26224d6b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab11f1ec6cc8c21b75e57e0a607e68ccf" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a08f72d06950185a0b4c9a42f415f0619" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aeb30d6cb923db18717d2639a1d5b4bbd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3f91281c79ec8db79d5aac370692b075" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Binomial</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af31840c2fe728d80ec62d9be55708272" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Binomial</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1f72e3e52490f599dc7f19c09912edf3" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Binomial</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4d10fd7b1578f0b4fdb686479ea46dd2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Binomial</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a61596f5528b09e7d7b6780f6579b347d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>BitLength</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac2082b3183642278651d24d2174117ea" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ChangeBit</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3be219bdda91aa1c19bab767f353bca4" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Clone</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a66cc175bd7db90fd6f89141e5f5c075d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Clone</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5b73980da80a2f4f8a7a902d104e6960" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa44042505bcf4ccbaa63c89a37d1e9a4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a963d32c98f7af07cdd25fe3213826ceb" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7679f97ceda87ef1c8bae70d2da2d771" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a22bb58ce4968435bbd97574932160e2f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a61230544e33025598f6919984ab34fd0" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6783576f3e3e226951dea114e272ed03" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a314206adf3d2101ecf51070e7a51ed84" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a06193d3791744f9c65a655eb812a0986" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af54b6a211828adbe4b70da842254f2ef" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aad8f72c6603d9187001c30f1e3e91434" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac571cecac4344d7fe9082539955670d0" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7cb1753de5a5cce1e50e4c338c320b88" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acfe571f874e08b0ff3dbe6ea5a499450" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6461a369ea80908f5bb379a57225e9eb" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Compare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab919a538243df3050daf0d9e4295f908" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab42e6d9e5fb19b306a2b85f8030afc58" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad225c999d5259e71a9575a5eec2cdaaa" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a43e313f6a88823a27e256aeea16ad158" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aed854eab25cb46f10d97d873f786f07d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a13cd5856b66d3571f61e43925011782d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaec6922fda3448c8f3bda63c3b80bbe8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1adbba17f39d206cc68f594ffd071cb055" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae4e388e896dfff9d44b7135c887603ef" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aedf8cd7c147b8bbb4e91ab04c501e45d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a80b61c64b5108e01c5a1b56a04e9c3c2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0c955befd61bef85413ce18958b6a03b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a41494064b87f0d7be3bc3169b1b4a3fb" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acf7f7b47bcbc235338089ccfe58a733e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae701b3a887e4c1edb7577e45e84dfecf" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbs</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a93c0d643514810d43b9267ea3154333e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a669eb0c96a13a483deba04701307eb81" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a36b1ae7c060eeeb3a9bd4ca396a466e8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaa79916f24b019da3cb030f6dadb40d6" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae632ca29d411a56180de081ebdb30e9b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af6b10738c37b4ff3d39a193314f110fc" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a808cc274a1e9fd00648ae8f6e30d202e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac7ddbae1eb9ab92a043b0386e5ab3c0b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareAbsTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a375ad8961c2d2e7a7728cc547949721e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae61ae3a8242fbf44877744118e8514c3" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acb1b0042cfe5392454b04c29a8018c00" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afab8f92a8426bc0926d0dcb4b9d23bc7" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0440d9b2229122ff46738e732669d506" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad94228c0a6fd86e0553030bcfd802c3b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a01322f56c787d37474fbf56627904758" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2d187c898cea82f09f3f79ae39918f10" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8a03c85a506e346d99b065462da7ef28" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CompareTo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae8254a40d0a4bc77ca042358b5ddda22" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Complement</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a430a62c84c8de66ddf9454e08208b3d5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>CountOnes</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a22897a12acb67ea0a81fc906d4aeb02c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1abb85dc0442e5fe7b5c610bcd9f41b968" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1adb2ae1352f44219bc42abe31a0157224" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac5db3fbf258275763990ea545758612f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a329d103386b14e9d43809c3a30aeb59e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a94b4001624aa25fd554cb4947564d6ec" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a770853b0048914516a4557bd18182053" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2f27089d725c09a6d021c48b953888d8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3e3f5b365c74359550b818bded368cd4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Divide</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad504d8eb1709abdb29d6fd5d6b7f2fc3" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>DivideExactly</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2deb1b55ab99cbfffb3b2e71d666385f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>DivideExactly</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a20bf2a5653c93d946ac5c7254ab2fe89" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>DivideExactly</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af84768d8435d8f95791b8ac93ba3ac8e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>DivideMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6966dd47d40c4cbd569c44aec448612c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a271c05f61799bb5d787a59cfa84fcc0d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1abfb2db34e2cbedfa8418232386bc0c33" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a079033d41b0bdd31e2328cd620d11ebd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a838e41f299d2fe15f712168f4bedec75" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afe189300ab810b4297bacb21c2180b2c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8109b6f15274337be22edf80dbfa4f96" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0074d35ac4ad77cde465aa9673f9b64a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Equals</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a137dc32c4f6dddec954a5ed7a74f74b8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>EqualsMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1abe6c868cf44f937953472e588fe69b54" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>EqualsMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a270c3fe468ca85dc427f6080eed9ae80" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>EqualsMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a14527e4a21e420d5ac5300ae48c1ff63" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Factorial</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a23eaf1a805400756113137185f088c26" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Factorial</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a93b14959a3271e168ce6f8126249351d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Fibonacci</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae66b9f2e1696eb04e0cc9553d01a8709" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Fibonacci</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0ab3e7c6befee94b9d73ec6eb3db0e46" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Fibonacci</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a58ebe352d7d94b244a65021db41028c0" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Fibonacci</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7960896692a4aba7eeebcc72e9a93b99" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5660f325920cff44e7656697b1ac582d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa03b5ba0ba66350389e1899b9f3c2198" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a65068fa6d5926e57728f37cb0be13465" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad08303062c292a53260bd5cc24e50c47" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5290d2b91bdb6cdad226844cb113d1c7" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a968b8e41c7ca382f1eee8973dd3ff7d8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Gcd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4a5f60c6411e1e2a0eff502713b955f3" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>GetHashCode</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab005bfacdaeb0af72284141e63f3629e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>GetTypeCode</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5c16f0b88ae25a5cee21964691ff024d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>HammingDistance</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af73d8adcf2c93836d58bd5e8d95a21fa" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IndexOfOne</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aec821a22f385285188045e3d92328264" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IndexOfZero</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1abdda02ef9a9d1396f7c3814211d23890" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>InternalValue</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1c94fe68817b6c9cc38712a513e4c532" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>InverseModExists</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa0cb6c80bf234259b311221896dbbd8b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>InvertMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a41a3ae07d9e3effad88269d2d9829ac4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsDivisibleBy</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a242398303f7ef63cdff4fcedc7591ad7" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsDivisibleBy</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae3921a22c4fac988f14d07be684744a9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsDivisibleBy</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae30bf01c3a175e15a046502940d59195" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsEven</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a179518978e403d243234678ed624e8de" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsOdd</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a645ed85cf48f9703949d479090151da4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsPerfectPower</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2df7be0ae9817193f387b4dc5b7c4e68" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsPerfectSquare</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afef01a2ed5de18ce3f4c4918e89d3af2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsProbablyPrimeRabinMiller</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6fcdf5cc8ea335767fa55c8ec9f0249e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsZero</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a112e69bebb3a4642b19866286329fe19" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>IsZero</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a39b87adf0d492c810cb93c30776f52d4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>JacobiSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aabf5982779178c46086ded981499d22d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>JacobiSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a524fab164cef5441c0aeb7f39c4be888" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>JacobiSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4834a77e792eb9709861ed09c359bf7f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>JacobiSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1adccbcf7dbec00cfdcbf21428951ed402" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>JacobiSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0fe941c418a672c9be8d0d485bd180a9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>KroneckerSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9a0eb255970db6e6f776426743b4626d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>KroneckerSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acbc93c09acacd37cae0353be0a1a2cc1" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>KroneckerSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad253d79a2ec48739908d146f403e3b9c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>KroneckerSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a536a196d5460d36162806b7dd6c013b6" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>KroneckerSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9c19cb65b810263fc2554acd303b2dcf" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lcm</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a99445bee50cfd428574837c882717de8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lcm</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4117a9342243d5e032093c493179ec3a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lcm</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad345c0d3e90c61eed49a860623740747" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lcm</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af9862dcfa292d76f026c54e69b8d5bfc" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lcm</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a404a1aa278925216f89810cd428fcc15" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>LegendreSymbol</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3ba1f06a5b7dc5e22cc4f4342b89ff3c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lucas</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad95f375815c51fd2412676482eae3225" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lucas</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a990f4e1c3b600087b2c17257289bb880" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lucas</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad6f25bc9b1d75694f13c95353ea81baa" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Lucas</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaf17cfc46f00efd97701602a8cd2a175" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Mod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acb033ea461bcae921707d1f5f6d51754" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Mod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a87c36d1002554746403c2ec40b0c8f3e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Mod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a93060897eec63089888aff2ad6804ff4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ModAsInt32</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a64492e819ac5feb9d71a1c541c3c9be2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ModAsUInt32</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa4e1884505e88ce2c4861f9a8e126b09" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>MPZ_LIBRARY_PATH</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7774cc099febb7c65724791a8a970e52" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Multiply</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afff34aca697fe4d417335efc0843b1d4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Multiply</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a284f4e9fa81e7e32c4b8571beffc8a82" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Multiply</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a160a3512efe96de415960a78dcf1dc62" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Negate</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a10a41f7a4437fc0e5ab7d62b892796d9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>NegativeOne</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a950ec9e2aba94998c2aa46d158c78882" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>NegativeTen</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a86bed0056f4c6015ff093f79ea5c5a73" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>NegativeThree</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a18e053199211baa61fc5e684047789b4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>NegativeTwo</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad7f7a5ed3f78fb4f2894d241f0143a90" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>NextPrimeGMP</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0f570537789eacdda0f21ef6ae13a2a5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>One</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a202c4acbd79920cacf6d213387f2adb5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac97b2e3ba47abd214893e4dadbfc8d14" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac0505225b9500b072821e0d60726e604" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7b2a5c1cb0f5b26e82a5aa8c88ec52f9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a15457c503028401b95dc033f4d989d5e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acdbb38b15ba8e56495b115b9a6872f7d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a77837e7cf7f56be05c651cd236c290df" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a133fe84da279036bd270fe9a6de97c88" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a54e24826bae30b910e6a15a632114258" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aade13767781d378cb14012a92e100565" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a35b69ee709735c2fdbebfb21ff234dd7" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator BigInt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac316c49d9e18b120bfa887e4810cede9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator byte</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a60885e627e2188b8f7a7b212fbded2bf" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator decimal</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae1c5b095699084d58c6476e5eab6efa4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator double</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a13f0c82fd307950a6d40daeb28e787f6" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator float</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5c43698a9bd2526102b0e45e0eafe4a1" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator int</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9a5e3d28ff75f9997dc5bc3d78ae0c0e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator long</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af7a3575578aabe2d63ac1a6266ea579c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator short</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab094d7a4b26a685a921783f4594458d8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator string</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a002963903d9ed75c100d3383b0f96ebf" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator uint</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad5c4414776284911786bc5177d21fae2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator ulong</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a222b960c145319af132257dd7c80d2c2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator ushort</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3c4a1663f9562b9123b3ee9b817820cc" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a98a38c4ac0f47360fd4d044546d36b61" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1addce3c693941eeb2c19324be59da7805" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af2bba89ba756ca62a867892b0af39249" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a48eab50df8494f86ce80b1cb83011dd6" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9b7fb2fa873b6074d6972d71bbf72645" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af6ee9e713f2d0091d6ce37daa6bef587" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4c0e0d56e032ef5239c8c9aaee996228" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1af9c3d22a61663945a46d62ae890dd7" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa67b325d4f5e1b874a57468132e5d816" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a56d3379ecbc999d93402ec38a0fa518a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a01f1bc0761dadf8157241923c49531a6" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5a8443e7c972ec4503d9e8d193fc99ab" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a59a11263b7daf111e722b4012559792a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afca9c2976511d761e2d8cd44c40b1b70" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator!=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1a3c728e6c4a26e320396a88290af4fa" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator%</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac0f74f2fc0f45774d83d742d1bddd77b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator%</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acb069a51bb87b6b6f4e71ed4a7287969" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator%</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af1521f286e687810c68d33b3b43850a0" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&amp;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae1a955579a9d2054ccad78e1c13bba7d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator*</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a357ee61b03ec7477f85830c7ac331b22" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator*</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa3f8d04340a12da7ebfbc5c659b6f5e9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator*</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a886e60c01da86f141d045efe4cae8a55" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator*</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9f6fe004d8bd67cb0f7ff933ca571196" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator*</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac9e1e03dea52bd7ece2b2afbb501c4fd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator+</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4cb1450e4fbe250da244950a35d73816" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator+</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0bedb203654cda770cd7871a6910d46c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator+</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2a2f15a4dcbdb62dbff8c15aa8d1866f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator+</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a49ce0a6b09906ef8119b0a58aa3f4842" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator+</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aea91b351e22a2109998108ff1f96b1ea" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator++</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a28499bdda0ff658af349ae66fc2b9223" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator-</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae42059c99cdbaca0df775b07cc7bc85c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator-</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1abf50a3c498b5c51d8ec1ea654fe2991a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator-</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a35e5e5883c8118562e6cfbb3a5d6dc2a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator-</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1d94afdc628f49106c011e0002bd4a72" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator-</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afd336a8abcd07e8ac9e01e2ae7134978" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator-</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaf7e258d4dcac4e4ae1b75622c55ae40" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator--</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3f64ebf26ff9d4516674b315b2e8226c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator/</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af9de8eb18c1c261204b82a41e6fa4e9e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator/</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aafa57a8f8d1e23c7a4e5b9d304d71447" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator/</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aeb3e35d6579ea9f97b4f6f9d3364a934" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a454560d435c1131f23e94275083f6e14" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a42cba141b99ff7e93bf11a737f29f439" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4aa1ab3a7026b639d8c52179b211d76a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad3772c12ac4ac8688e3013e309cd0893" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2310cb9e43ab68fd3ee13602ad57c339" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1aa7f41ca88db72416874dbb5c5c1dcf" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa7f2b15d3294dc0d034d1b0f8f479d6a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a76efdc7708a595476a4c0cdde0f08190" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaf218622343b403d54ae87093dc572c8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab37e2c3aa277f8b39b3ba38c7145f9a5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a127ba3e611e4136bc61f1f7f6d360955" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8566ba96f2f1ce57607bb3b58b4222c5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6d4807981bc41bb100e08c42957afa46" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6edbb8c78f76ee7bf0cfb6a42509b4ad" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2119da62d925c9d61cc998f5162eefdd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a59677302f3c048b9a3ae7f59060cc6ca" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a44aea34ee6142757cf5cf28617025532" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a38733a21790c9e7cd08cad1a9c2821ed" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9d4d1a6dc3019295bd499a60b81f2903" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3d505f86df16a6494a874e547f2909ba" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa93b44dcf7fcfcd8cc1ae0607b5326e4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a660120bc236f48d7d42eb95c5cd5e040" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aef051c2110cd965f6c172439f0467cf7" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3582474dd94e29f495e7697818088aa5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4dd099d98ff6c6d88575d4b613aac5fe" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af2b531a1a4df6bcd2375b7bc93167700" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1adf564c64167099faad46715fc99e543e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acc71fb6c8991f8d05349bca014a9a3a5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a502ee0eb5c54981c01f6717d84d5d420" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aedb14b1cddc46cb7cc12301d50ee2885" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&lt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaee05f272c0b7e622a154a4e38248555" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a587231877430b5d4b3589bd79ab62cd8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac7e2cf3f1494c97dbd90485ea2c513e1" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab95e15807938613123d12a13dab186b4" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab8cef0400f87e10d334c8ebb88a4c78e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0cba33e54c201955f471e6aa82084a26" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9ac4cf4d8ad466889b34512a75cc1d04" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a070a4d460f0b9b7acc8299ccc849f973" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a95ec785a07c2f19efe2af4b4495f821a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0b6feb67ed2f8058dcb02879227f6803" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a08fd43e60cb7a7ea0a064df75cbe63db" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a17f9a39d40d1065788c67cf47240a0bd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a72b11c1b94b64dd34076d62e7f5e032c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9c1d19910255f67bfdb92585c9b10648" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac7ddd805c25022c9a1600f29c0621277" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator==</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af79f73c5986fa019050c379443ebda94" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6099d02b6b8969350e92caa7c2f54d53" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8eb91ca0779dd43deb6f7f2074236878" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae7d1ae55f784e7be4571f4bf12e0e258" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af8681b93f3951bf5c5206b81b836219b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8cdc8f4a15e8b10b1015fb07005aaf54" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af93e61cb47480e6f9995f9609c20295f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af7a7be0233e4bf36718fbf732a0e3667" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af79f1f62d246845b8995527102cb66d3" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a85c3ba4219b3d72c110fb77a381453e1" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5f3b29d6b4fd78aa1a34b5de3bacbe95" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a30159d49b89862be79d8e96abafce2e9" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a023f53fc5aa24725bb57b80b3a19c32d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a59274261bc987b100dc2e08a118a228e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8ec0921ab64c7ebfea3d131214229bd5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad4a689e2860367393daddf0476103332" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aec950f59a9b83f21364c868da34d4288" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a6ccc34b7aa2c91cec6f71687585c2cac" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ade1bd6b7fc5f3c6dd0e271a9e095cc23" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3285f342ea0f47799eaa7e69b325d0fe" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3fdf551dbf49ac0ff8c2f7ddc1bd3888" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a2ce92748e15aec9fcd317c6c95b26132" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab52a00a7e236bcecae63c1f2e78ca7f5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af8c719dc8d2d8861e662b2818849ee74" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4bc23612986efb62e91ddd581fd92c8e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac1ccca09cb94dfa614db39a6b03019dd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1c89ae5a91dfb5ebf0155108805e80fa" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a965ae2ab044d3df09420d108845507e8" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ade1b958d06671411fa21fdb47d35abfd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3a483f16660e6ac3f7746f3486903bfd" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;=</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab73b9d2b4e4d669c03b6dd0525bfa65f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a042aadee93c7d0cfc4faed7d3fea63c6" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator^</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac61e5c2a20a6edc1dcb1092f7d507a63" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator|</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ab6fee7a722cdeee266a42bfb9c0b353a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>operator~</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a3505ddef92e9efda501483ccb749da62" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Or</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afa4d2dc5534f63163abb66437b26c3be" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Power</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acc07f3c04aea9158143b25ac2ade7878" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Power</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5564f72ab93cf41989df66dd332360b6" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Power</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8103957660e3ee6d646182885175b511" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Power</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0e9ff328679aebf8ede6fd94b5e6abae" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>PowerMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac2b25c18c560a829cfd339eb062a0c85" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>PowerMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae186a6bcd42c5c1fae217c106db7fc27" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>PowerMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad0fcc0381bc614e3e3f52423c6e87afc" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Remainder</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a504344bbd1ddffd3760559be3c5f107d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>RemoveFactor</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a570cd0e6f9fc4fce32203acdd378f34d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>RemoveFactor</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad4479534690ab890849658c0e14d9b55" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Root</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aaa8350a5d0713453121ec7d652f8f71d" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Root</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a5eb08c2c46e2fde5a1f8a3846f6355f1" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Root</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1c0d0f46debd25cfcf7c4c0d2d85f131" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Root</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a85bf6f68e9fca790efc089ec30812183" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Root</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8805d5e8dd9f91e14cae44fee365b224" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Root</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac25e6319d6c4e9f5ce457535aed8a40b" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>s_chunkBitLength</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a622d19ab1d0b0a786d3a9110f5305863" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>s_defaultStringBase</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa65df7c328988698931079a11bef9751" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ShiftLeft</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae8cab4acbad9c2101dda90dbe3ce7a59" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ShiftRight</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1aa5c5619deb0fbfdc759a2f0d00a62532" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Sqrt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9a27a2eb189c55c43c3b81148b37e031" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Sqrt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a09bc320885bfc3afd35197bc24c90591" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Sqrt</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7f67bdcca22b88389bd87a3e4baee120" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Square</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a67b93e1bef7a85850cd66d9593f434b2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Subtract</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acaacb0a41cb6f01bf769b809d04568b5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Subtract</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a71dfba7f646ebd61c563f4ba6549ffb2" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Subtract</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a1689d1849a493c278946cd3d3b471091" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Ten</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1afc193d789cf68f438575fb7e92f69b1e" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>this</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9cd70936cd6743e167b0e2ffb631a3d3" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Three</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9a7e933a53a09b643a72698257a56276" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToBoolean</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad876b7ac3ef8c820025798f447254f44" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToByte</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1abfaa1f7a97f4fbae61be133c39835d5b" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToByteArray</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a99c27398e3563fcf14afa698296b390a" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToByteArray</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af4f63d8c80f868f8cb5f1b9607246adc" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToChar</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0ffd50386a7aaf6516a6ac614de3d314" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToDateTime</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a42dde45be6f55d69217147f1268de7a0" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToDecimal</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1acb58387528924434f18ead61a9507968" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToDouble</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a163e24a26729a81f6ca978fd2feec56f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToInt16</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a0aee0fd1e0478f0fc13b53a5a270efad" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToInt32</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a4779d6464cfb55a6011c0a77f783a576" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToInt64</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae05129f243eebc00c3e2f96f465a156f" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToSByte</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8855c0eaabd508b1fed6189fd18ebe96" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToSingle</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a114d8c939c8852c8b55e46b8e136c789" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToString</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a857ef6a3eeb95550fb3a37840fdb12d5" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToString</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8bdfd2486746804c595a8687d82d4045" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToString</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af418f5150534bfee0c2dc48c2961eccd" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToType</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a9a03d087abb507829c3003ea4773807a" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToUInt16</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ac3da54dd4b6c913d53f6f37b40c1022e" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToUInt32</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1af29fae6aebc557ab9cd78ecd16933239" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToUInt64</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ae5c0b2eab5993f5cbc2412fd99ac0a33" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToUIntArray</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad85cdd7fd8db7d16334d828de3ed6a0f" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>ToUIntArray</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a8104c5f04f5542523f7b92dd68f468b0" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>TryInvertMod</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a114be81fdc774c999b688763e01a664c" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Two</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a256ab324291af785e76df771e60a15be" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Xor</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1ad20e33a8f39428e2ad5764c74def4409" prot="public" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>Zero</name></member>
      <member refid="class_emil_1_1_g_m_p_1_1_big_int_1a7cc0253aeb424fed9e820ca7a4ceacdf" prot="private" virt="non-virtual"><scope>Emil::GMP::BigInt</scope><name>~BigInt</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
