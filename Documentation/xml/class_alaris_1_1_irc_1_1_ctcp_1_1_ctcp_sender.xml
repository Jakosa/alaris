<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender" kind="class" prot="public">
    <compoundname>Alaris::Irc::Ctcp::CtcpSender</compoundname>
    <basecompoundref refid="class_alaris_1_1_irc_1_1_command_builder" prot="public" virt="non-virtual">Alaris.Irc.CommandBuilder</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1abd101200838ab04c32fad847106e2eac" prot="private" static="no" mutable="no">
        <type>readonly ArrayList</type>
        <definition>readonly ArrayList Alaris.Irc.Ctcp.CtcpSender._pingList</definition>
        <argsstring></argsstring>
        <name>_pingList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="17" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a6de48c584b89584c344fd6ba807a0ff0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>internal</type>
        <definition>internal Alaris.Irc.Ctcp.CtcpSender.CtcpSender</definition>
        <argsstring>(Connection connection)</argsstring>
        <name>CtcpSender</name>
        <param>
          <type><ref refid="class_alaris_1_1_irc_1_1_connection" kindref="compound">Connection</ref></type>
          <declname>connection</declname>
        </param>
        <briefdescription>
<para>Create an instance using a specific connection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection to an IRC server.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="24" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a76789b9ef6c763fcaca4bb73420a539c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>internal bool</type>
        <definition>internal bool Alaris.Irc.Ctcp.CtcpSender.IsMyRequest</definition>
        <argsstring>(string timestamp)</argsstring>
        <name>IsMyRequest</name>
        <param>
          <type>string</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Test if the timestamp is one that this client sent out. Needed to distinguish betwen a Ping reply and query. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The timstamp</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the timestamp was sent by this client.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="36" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a8edd1fca07aa8e6da0359d296d31dff8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>internal void</type>
        <definition>internal void Alaris.Irc.Ctcp.CtcpSender.ReplyReceived</definition>
        <argsstring>(string timestamp)</argsstring>
        <name>ReplyReceived</name>
        <param>
          <type>string</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Remove a timstamp from the list we are maintaining. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp that was sent back.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="45" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="44" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a4c2223f8d54f51406901b40446004264" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alaris.Irc.Ctcp.CtcpSender.CtcpReply</definition>
        <argsstring>(string command, string nick, string reply)</argsstring>
        <name>CtcpReply</name>
        <param>
          <type>string</type>
          <declname>command</declname>
        </param>
        <param>
          <type>string</type>
          <declname>nick</declname>
        </param>
        <param>
          <type>string</type>
          <declname>reply</declname>
        </param>
        <briefdescription>
<para>Send a reply in response to a CTCP request. Replies that exceed the IRC max length will be truncated. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nick</parametername>
</parameternamelist>
<parameterdescription>
<para>The target&apos;s nick name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The CTCP command. Should be a string constant from <ref refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_util" kindref="compound">CtcpUtil</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reply</parametername>
</parameternamelist>
<parameterdescription>
<para>The text of the response.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the nick is invalid, the command is empty, or the reply is empty.</para></parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_listener_1a7e330d34aca219e16fb96c0eafb11e0e" kindref="member">CtcpListener.OnCtcpReply</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="61" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="60" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a50968c677c9cfc54b5f56447296f5891" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alaris.Irc.Ctcp.CtcpSender.CtcpRequest</definition>
        <argsstring>(string command, string nick)</argsstring>
        <name>CtcpRequest</name>
        <param>
          <type>string</type>
          <declname>command</declname>
        </param>
        <param>
          <type>string</type>
          <declname>nick</declname>
        </param>
        <briefdescription>
<para>Send a CTCP query to another user. </para>        </briefdescription>
        <detaileddescription>
<para>The target may also respond with an error or nothing at all if it cannot or does not want to answer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nick</parametername>
</parameternamelist>
<parameterdescription>
<para>The target&apos;s nick name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>The CTCP command. Should be a string constant from <ref refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_util" kindref="compound">CtcpUtil</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the nick is invalid or the command is empty.</para></parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_listener_1a90df4370f088339808256f8f8f15c6e9" kindref="member">CtcpListener.OnCtcpRequest</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="102" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="101" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1ae6b3ae60940a9838fdd0b9461772bc11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alaris.Irc.Ctcp.CtcpSender.CtcpPingReply</definition>
        <argsstring>(string nick, string timestamp)</argsstring>
        <name>CtcpPingReply</name>
        <param>
          <type>string</type>
          <declname>nick</declname>
        </param>
        <param>
          <type>string</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Send back a timestamp so the requester can calculate his ping to this client. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nick</parametername>
</parameternamelist>
<parameterdescription>
<para>The target&apos;s nick name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp sent by the requester.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the nick is invalid or the timestamp is empty.</para></parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_listener_1a57a6f2a1f731807904e8f8e85cb1c887" kindref="member">CtcpListener.OnCtcpPingReply</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="127" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="126" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a8a1b7c1c2c54b600d48203521692037e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Alaris.Irc.Ctcp.CtcpSender.CtcpPingRequest</definition>
        <argsstring>(string nick, string timestamp)</argsstring>
        <name>CtcpPingRequest</name>
        <param>
          <type>string</type>
          <declname>nick</declname>
        </param>
        <param>
          <type>string</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
<para>Send a CTCP Ping request to another user. </para>        </briefdescription>
        <detaileddescription>
<para>The target may also respond with an error or nothing at all if it cannot or does not want to answer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nick</parametername>
</parameternamelist>
<parameterdescription>
<para>The target&apos;s nick name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The timestamp to send to the target user. These can be generated by Thresher (<ref refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_util_1a63d5c1723223aa3f7ece9cc87b57fe30" kindref="member">CtcpUtil.CreateTimestamp</ref>) or by the client application.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the nick is invalid.</para></parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_listener_1a792bd55a53bcc57a0ebf63545dee6b50" kindref="member">CtcpListener.OnCtcpPingRequest</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="156" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="155" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class allows the client to send CTCP commands. There is no limit on what commands can actually be sent, however, the accepted CTCP commands are: <ref refid="class_alaris_1_1_irc_1_1_user_info" kindref="compound">UserInfo</ref>, Finger, Version, Source, ClientInfo, ErrMsg, and Time. </para>    </briefdescription>
    <detaileddescription>
<para>Action, though it is also a CTCP command, is so common that it is handled by the normal sender class. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1722">
        <label>Alaris.Irc.Ctcp.CtcpSender</label>
        <link refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender"/>
        <childnode refid="1723" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1723">
        <label>Alaris.Irc.CommandBuilder</label>
        <link refid="class_alaris_1_1_irc_1_1_command_builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1732">
        <label>Alaris.Irc.Sender</label>
        <link refid="class_alaris_1_1_irc_1_1_sender"/>
        <childnode refid="1725" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1727">
        <label>Alaris.Irc.Ctcp.CtcpListener</label>
        <link refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_listener"/>
        <childnode refid="1726" relation="usage">
          <edgelabel>_connection</edgelabel>
        </childnode>
      </node>
      <node id="1730">
        <label>Alaris.Irc.ServerProperties</label>
        <link refid="class_alaris_1_1_irc_1_1_server_properties"/>
      </node>
      <node id="1724">
        <label>Alaris.Irc.Ctcp.CtcpSender</label>
        <link refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender"/>
        <childnode refid="1725" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1725">
        <label>Alaris.Irc.CommandBuilder</label>
        <link refid="class_alaris_1_1_irc_1_1_command_builder"/>
        <childnode refid="1726" relation="usage">
          <edgelabel>_connection</edgelabel>
        </childnode>
      </node>
      <node id="1729">
        <label>Alaris.Irc.Ctcp.CtcpResponder</label>
        <link refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_responder"/>
        <childnode refid="1726" relation="usage">
          <edgelabel>_connection</edgelabel>
        </childnode>
      </node>
      <node id="1726">
        <label>Alaris.Irc.Connection</label>
        <link refid="class_alaris_1_1_irc_1_1_connection"/>
        <childnode refid="1727" relation="usage">
          <edgelabel>_ctcpListener</edgelabel>
        </childnode>
        <childnode refid="1724" relation="usage">
          <edgelabel>_ctcpSender</edgelabel>
        </childnode>
        <childnode refid="1728" relation="usage">
          <edgelabel>_listener</edgelabel>
        </childnode>
        <childnode refid="1729" relation="usage">
          <edgelabel>_ctcpResponder</edgelabel>
        </childnode>
        <childnode refid="1730" relation="usage">
          <edgelabel>_properties</edgelabel>
        </childnode>
        <childnode refid="1731" relation="usage">
          <edgelabel>ConnectionArgs</edgelabel>
        </childnode>
        <childnode refid="1732" relation="usage">
          <edgelabel>_sender</edgelabel>
        </childnode>
      </node>
      <node id="1731">
        <label>Alaris.Irc.ConnectionArgs</label>
        <link refid="struct_alaris_1_1_irc_1_1_connection_args"/>
      </node>
      <node id="1728">
        <label>Alaris.Irc.Listener</label>
        <link refid="class_alaris_1_1_irc_1_1_listener"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" line="16" bodyfile="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris.Irc/Ctcp/CtcpSender.cs" bodystart="15" bodyend="169"/>
    <listofallmembers>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1abd101200838ab04c32fad847106e2eac" prot="private" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>_pingList</name></member>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1ae6b3ae60940a9838fdd0b9461772bc11" prot="public" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>CtcpPingReply</name></member>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a8a1b7c1c2c54b600d48203521692037e" prot="public" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>CtcpPingRequest</name></member>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a4c2223f8d54f51406901b40446004264" prot="public" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>CtcpReply</name></member>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a50968c677c9cfc54b5f56447296f5891" prot="public" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>CtcpRequest</name></member>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a6de48c584b89584c344fd6ba807a0ff0" prot="private" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>CtcpSender</name></member>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a76789b9ef6c763fcaca4bb73420a539c" prot="private" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>IsMyRequest</name></member>
      <member refid="class_alaris_1_1_irc_1_1_ctcp_1_1_ctcp_sender_1a8edd1fca07aa8e6da0359d296d31dff8" prot="private" virt="non-virtual"><scope>Alaris::Irc::Ctcp::CtcpSender</scope><name>ReplyReceived</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
