<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="_advanced_commands_8cs" kind="file">
    <compoundname>AdvancedCommands.cs</compoundname>
    <innerclass refid="class_alaris_1_1_commands_1_1_advanced_commands" prot="public">Alaris::Commands::AdvancedCommands</innerclass>
    <innernamespace refid="namespace_alaris_1_1_commands">Alaris::Commands</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">ï»¿using<sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Alaris.API.Crypt;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Alaris.API.Database;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespace_alaris_1_1_commands" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Alaris.Commands</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="class_alaris_1_1_commands_1_1_advanced_commands" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_alaris_1_1_commands_1_1_advanced_commands" kindref="compound" tooltip="Advanced Alaris commands.">AdvancedCommands</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="class_alaris_1_1_commands_1_1_parameterized_alaris_command" kindref="compound" tooltip="Marks a method as a parameterized Alaris command.">ParameterizedAlarisCommand</ref>(</highlight><highlight class="stringliteral">&quot;admin&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_alaris_1_1_commands_1a234f7f2e79b368ac9569d2d130a3e624" kindref="member" tooltip="Specifies a command&amp;#39;s access permission.">CommandPermission</ref>.Admin,<sp/>4)]</highlight></codeline>
<codeline lineno="21" refid="class_alaris_1_1_commands_1_1_advanced_commands_1aeea420391c5706b36a07cb78c5c38aee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleAdminCommands(<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter" kindref="compound" tooltip="Main param passed to command methods.">AlarisMainParameter</ref><sp/>mp,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>user,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>nick,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(action))</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a2f6dfee2f2d99862bd69d16c505515fd" kindref="member" tooltip="Gets the Alaris instance.">Bot</ref>.<ref refid="class_alaris_1_1_alaris_bot_1ade710f236a5cd5b8ae924ec6647438f4" kindref="member" tooltip="Sends the given message to the specified channel.">SendMsg</ref>(mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a6aa409942a76290d28c6451eba612cd2" kindref="member" tooltip="Channels where the command was given.">Channel</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Sub-commands:<sp/>list<sp/>|<sp/>delete<sp/>|<sp/>add&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(action.Equals(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,<sp/>StringComparison.InvariantCultureIgnoreCase)<sp/>&amp;&amp;<sp/>!</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(user)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(nick)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(host))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alaris_1_1_a_p_i_1_1_database_1_1_database_manager" kindref="compound" tooltip="Class providing static methods for managing the SQL databse.">DatabaseManager</ref>.Query(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>admins(user,nick,hostname)<sp/>VALUES(&apos;{0}&apos;,<sp/>&apos;{1}&apos;,<sp/>&apos;{2}&apos;)&quot;</highlight><highlight class="normal">,<sp/>user,<sp/>nick,<sp/>host));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a2f6dfee2f2d99862bd69d16c505515fd" kindref="member" tooltip="Gets the Alaris instance.">Bot</ref>.<ref refid="class_alaris_1_1_alaris_bot_1ade710f236a5cd5b8ae924ec6647438f4" kindref="member" tooltip="Sends the given message to the specified channel.">SendMsg</ref>(mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a6aa409942a76290d28c6451eba612cd2" kindref="member" tooltip="Channels where the command was given.">Channel</ref>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;Admin<sp/>{0}<sp/>has<sp/>been<sp/>added.&quot;</highlight><highlight class="normal">,<sp/>nick));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(action.Equals(</highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">,<sp/>StringComparison.InvariantCultureIgnoreCase))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_alaris_1_1_a_p_i_1_1_database_1_1_admin_manager" kindref="compound" tooltip="Class providing static methods for admin management.">AdminManager</ref>.GetAdmins()<sp/>==<sp/>null)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a2f6dfee2f2d99862bd69d16c505515fd" kindref="member" tooltip="Gets the Alaris instance.">Bot</ref>.<ref refid="class_alaris_1_1_alaris_bot_1ade710f236a5cd5b8ae924ec6647438f4" kindref="member" tooltip="Sends the given message to the specified channel.">SendMsg</ref>(mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a6aa409942a76290d28c6451eba612cd2" kindref="member" tooltip="Channels where the command was given.">Channel</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>admins.&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>adm<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_alaris_1_1_a_p_i_1_1_database_1_1_admin_manager" kindref="compound" tooltip="Class providing static methods for admin management.">AdminManager</ref>.GetAdmins())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a2f6dfee2f2d99862bd69d16c505515fd" kindref="member" tooltip="Gets the Alaris instance.">Bot</ref>.<ref refid="class_alaris_1_1_alaris_bot_1ade710f236a5cd5b8ae924ec6647438f4" kindref="member" tooltip="Sends the given message to the specified channel.">SendMsg</ref>(mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a6aa409942a76290d28c6451eba612cd2" kindref="member" tooltip="Channels where the command was given.">Channel</ref>,<sp/>adm);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(action.Equals(</highlight><highlight class="stringliteral">&quot;delete&quot;</highlight><highlight class="normal">,<sp/>StringComparison.InvariantCultureIgnoreCase)<sp/>&amp;&amp;<sp/>!</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(user))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alaris_1_1_a_p_i_1_1_database_1_1_admin_manager" kindref="compound" tooltip="Class providing static methods for admin management.">AdminManager</ref>.DeleteAdmin(user);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a2f6dfee2f2d99862bd69d16c505515fd" kindref="member" tooltip="Gets the Alaris instance.">Bot</ref>.<ref refid="class_alaris_1_1_alaris_bot_1ade710f236a5cd5b8ae924ec6647438f4" kindref="member" tooltip="Sends the given message to the specified channel.">SendMsg</ref>(mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a6aa409942a76290d28c6451eba612cd2" kindref="member" tooltip="Channels where the command was given.">Channel</ref>,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.Format(</highlight><highlight class="stringliteral">&quot;Admin<sp/>{0}<sp/>deleted.&quot;</highlight><highlight class="normal">,<sp/>user));<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="class_alaris_1_1_commands_1_1_parameterized_alaris_command" kindref="compound" tooltip="Marks a method as a parameterized Alaris command.">ParameterizedAlarisCommand</ref>(</highlight><highlight class="stringliteral">&quot;aes&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_alaris_1_1_commands_1a234f7f2e79b368ac9569d2d130a3e624" kindref="member" tooltip="Specifies a command&amp;#39;s access permission.">CommandPermission</ref>.Normal,<sp/>2)]</highlight></codeline>
<codeline lineno="62" refid="class_alaris_1_1_commands_1_1_advanced_commands_1a20ab79b5a7a21e7affd9b2f8d37cfb87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleAesCommands(<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter" kindref="compound" tooltip="Main param passed to command methods.">AlarisMainParameter</ref><sp/>mp,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>action,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>text)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(action)<sp/>||<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(text))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action.Equals(</highlight><highlight class="stringliteral">&quot;decrypt&quot;</highlight><highlight class="normal">,<sp/>StringComparison.InvariantCultureIgnoreCase))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a2f6dfee2f2d99862bd69d16c505515fd" kindref="member" tooltip="Gets the Alaris instance.">Bot</ref>.<ref refid="class_alaris_1_1_alaris_bot_1ade710f236a5cd5b8ae924ec6647438f4" kindref="member" tooltip="Sends the given message to the specified channel.">SendMsg</ref>(mp.<ref refid="class_alaris_1_1_commands_1_1_alaris_main_parameter_1a6aa409942a76290d28c6451eba612cd2" kindref="member" tooltip="Channels where the command was given.">Channel</ref>,<sp/><ref refid="class_alaris_1_1_a_p_i_1_1_crypt_1_1_rijndael" kindref="compound" tooltip="Implementation of the secure Rijndael algorithm (also known as the AES encryption).">Rijndael</ref>.DecryptString(text));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/Alaris/Commands/AdvancedCommands.cs"/>
  </compounddef>
</doxygen>
