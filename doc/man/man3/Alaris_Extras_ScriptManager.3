.TH "Alaris::Extras::ScriptManager" 3 "25 May 2010" "Version 1.6" "Alaris IRC Bot" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Alaris::Extras::ScriptManager \- 
.PP
A script manager for the IRC connections. Loads plugins, manages events etc.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBScriptManager\fP (ref \fBConnection\fP con, ref List< string > chans)"
.br
.RI "\fICreates a new instance of \fBScriptManager\fP. \fP"
.ti -1c
.RI "void \fBRegisterOnPublicHook\fP (PublicMessageEventHandler handler)"
.br
.RI "\fIRegisters the given function to be run when a public message occurs. \fP"
.ti -1c
.RI "void \fBRegisterOnPartHook\fP (PartEventHandler handler)"
.br
.RI "\fIRegisters the given function to be run when somebody leaves a channel. \fP"
.ti -1c
.RI "void \fBRegisterOnQuitHook\fP (QuitEventHandler handler)"
.br
.RI "\fIRegisters the given function to be run when somebody quits the IRC server. \fP"
.ti -1c
.RI "void \fBRegisterOnPrivateHook\fP (PrivateMessageEventHandler handler)"
.br
.RI "\fIRegisters the given function to be run when the bot receives a private message from someone. \fP"
.ti -1c
.RI "void \fBRegisterOnDisconnectedHook\fP (DisconnectedEventHandler handler)"
.br
.RI "\fIRegisters the given function to be run when the bot gets disconnected from the server. \fP"
.ti -1c
.RI "void \fBRegisterOnRegisteredHook\fP (RegisteredEventHandler handler)"
.br
.RI "\fIRegisters the given function to be run when the bots gets registered on the server (usually after MOTD). \fP"
.ti -1c
.RI "void \fBRegisterOnErrorHook\fP (ErrorMessageEventHandler handler)"
.br
.RI "\fIRegisters the given function to be run when the bot receives an error message from the server. \fP"
.ti -1c
.RI "void \fBLoadPlugins\fP ()"
.br
.RI "\fILoads the plugins. \fP"
.ti -1c
.RI "bool \fBLoadPlugin\fP (string name)"
.br
.RI "\fILoads the specified plugin. \fP"
.ti -1c
.RI "bool \fBUnloadPlugin\fP (string name)"
.br
.RI "\fIUnloads the specified plugin. \fP"
.ti -1c
.RI "void \fBRunPublicHandlers\fP (\fBUserInfo\fP info, string chan, string msg)"
.br
.RI "\fIRuns the public handlers found inside the loaded plugins. \fP"
.ti -1c
.RI "void \fBRunRegisteredHandlers\fP ()"
.br
.RI "\fIRuns the registered handlers in the loaded plugins. \fP"
.ti -1c
.RI "List< \fBIAlarisBasic\fP > \fBGetPlugins\fP ()"
.br
.RI "\fIGets the list of loaded plugins. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBConnection\fP \fBConnection\fP\fC [get, set]\fP"
.br
.RI "\fIThe IRC connection instance. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A script manager for the IRC connections. Loads plugins, manages events etc. 


.SH "Constructor & Destructor Documentation"
.PP 
.SS "Alaris.Extras.ScriptManager.ScriptManager (ref \fBConnection\fP con, ref List< string > chans)"
.PP
Creates a new instance of \fBScriptManager\fP. \fBParameters:\fP
.RS 4
\fIcon\fP The IRC connection. See \fBAlaris.Irc.Connection\fP 
.RE
.PP
/ 
.PP
\fBParameters:\fP
.RS 4
\fIchans\fP Channels the bot is on. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "List<\fBIAlarisBasic\fP> Alaris.Extras.ScriptManager.GetPlugins ()"
.PP
Gets the list of loaded plugins. \fBReturns:\fP
.RS 4
A list of plugins. 
.RE
.PP

.SS "bool Alaris.Extras.ScriptManager.LoadPlugin (string name)"
.PP
Loads the specified plugin. \fBParameters:\fP
.RS 4
\fIname\fP The name of the plugin to load. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.LoadPlugins ()"
.PP
Loads the plugins. 
.SS "void Alaris.Extras.ScriptManager.RegisterOnDisconnectedHook (DisconnectedEventHandler handler)"
.PP
Registers the given function to be run when the bot gets disconnected from the server. \fBParameters:\fP
.RS 4
\fIhandler\fP The function to register. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RegisterOnErrorHook (ErrorMessageEventHandler handler)"
.PP
Registers the given function to be run when the bot receives an error message from the server. \fBParameters:\fP
.RS 4
\fIhandler\fP The function to register. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RegisterOnPartHook (PartEventHandler handler)"
.PP
Registers the given function to be run when somebody leaves a channel. \fBParameters:\fP
.RS 4
\fIhandler\fP The function to register. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RegisterOnPrivateHook (PrivateMessageEventHandler handler)"
.PP
Registers the given function to be run when the bot receives a private message from someone. \fBParameters:\fP
.RS 4
\fIhandler\fP The function to register. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RegisterOnPublicHook (PublicMessageEventHandler handler)"
.PP
Registers the given function to be run when a public message occurs. \fBParameters:\fP
.RS 4
\fIhandler\fP The function to register. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RegisterOnQuitHook (QuitEventHandler handler)"
.PP
Registers the given function to be run when somebody quits the IRC server. \fBParameters:\fP
.RS 4
\fIhandler\fP The function to register. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RegisterOnRegisteredHook (RegisteredEventHandler handler)"
.PP
Registers the given function to be run when the bots gets registered on the server (usually after MOTD). \fBParameters:\fP
.RS 4
\fIhandler\fP The function to register. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RunPublicHandlers (\fBUserInfo\fP info, string chan, string msg)"
.PP
Runs the public handlers found inside the loaded plugins. \fBParameters:\fP
.RS 4
\fIinfo\fP Userinfo passed to every handler. 
.br
\fIchan\fP Channel passed to every handler. 
.br
\fImsg\fP Message passed to every handler. 
.RE
.PP

.SS "void Alaris.Extras.ScriptManager.RunRegisteredHandlers ()"
.PP
Runs the registered handlers in the loaded plugins. 
.SS "bool Alaris.Extras.ScriptManager.UnloadPlugin (string name)"
.PP
Unloads the specified plugin. \fBParameters:\fP
.RS 4
\fIname\fP The name of the plugin to unload. 
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "\fBConnection\fP Alaris.Extras.ScriptManager.Connection\fC [get, set]\fP"
.PP
The IRC connection instance. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Alaris IRC Bot from the source code.
