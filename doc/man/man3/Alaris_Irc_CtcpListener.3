.TH "Alaris::Irc::CtcpListener" 3 "25 May 2010" "Version 1.6" "Alaris IRC Bot" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Alaris::Irc::CtcpListener \- 
.PP
This class is used to send CTCP specific events. Once registered with this object the client can receive notification of all CTCP requests, pings, and replies. Instances of this class are not created directly but are retrieved as a property from a \fBConnection\fP object.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBIsCtcpMessage\fP (string message)"
.br
.RI "\fITest if the message contains CTCP commands. \fP"
.in -1c
.SS "Events"

.in +1c
.ti -1c
.RI "CtcpReplyEventHandler \fBOnCtcpReply\fP"
.br
.RI "\fIListens for replies to CTCP queries sent by this client. \fP"
.ti -1c
.RI "CtcpRequestEventHandler \fBOnCtcpRequest\fP"
.br
.RI "\fIListens for CTCP requests. \fP"
.ti -1c
.RI "CtcpPingReplyEventHandler \fBOnCtcpPingReply\fP"
.br
.RI "\fIListens for a reply to CTCP Ping query sent by this client. \fP"
.ti -1c
.RI "CtcpPingRequestEventHandler \fBOnCtcpPingRequest\fP"
.br
.RI "\fIListens for CTCP Ping requests. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class is used to send CTCP specific events. Once registered with this object the client can receive notification of all CTCP requests, pings, and replies. Instances of this class are not created directly but are retrieved as a property from a \fBConnection\fP object. 

All CTCP messages come in Request/Reply pairs. Each event signals either the Request or the Response. All CTCP queries (with the exception of CTCP Ping) are very similiar so they are all handled by the same set of events. example>
.PP
.nf
Create a Connection object which will support CTCP (second bool param).
            Connection connection = new Connection( args, true, false );        
Register a delegate on this CtcpListener.
            connection.CtcpListener.OnCtcpRequest += new CtcpRequestEventHandler( MyOnCtcpRequest );
If the Connection was created without CTCP support then this property will return null.
However, CTCP can be turned on and off dynamically. To enable it at a later time call:
            connection.EnableCtcp = true;
Now you can register listeners as above.
Setting EnableCtcp to false will delete the instance of CtcpListener and no more
CTCP events will be raised.
            /code></example>  

.fi
.PP

.SH "Member Function Documentation"
.PP 
.SS "static bool Alaris.Irc.CtcpListener.IsCtcpMessage (string message)\fC [static]\fP"
.PP
Test if the message contains CTCP commands. \fBParameters:\fP
.RS 4
\fImessage\fP The raw message from the IRC server
.RE
.PP
\fBReturns:\fP
.RS 4
True if this is a Ctcp request or reply.
.RE
.PP

.SH "Event Documentation"
.PP 
.SS "CtcpPingReplyEventHandler Alaris.Irc.CtcpListener.OnCtcpPingReply"
.PP
Listens for a reply to CTCP Ping query sent by this client. 
.SS "CtcpPingRequestEventHandler Alaris.Irc.CtcpListener.OnCtcpPingRequest"
.PP
Listens for CTCP Ping requests. 
.SS "CtcpReplyEventHandler Alaris.Irc.CtcpListener.OnCtcpReply"
.PP
Listens for replies to CTCP queries sent by this client. 
.SS "CtcpRequestEventHandler Alaris.Irc.CtcpListener.OnCtcpRequest"
.PP
Listens for CTCP requests. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Alaris IRC Bot from the source code.
