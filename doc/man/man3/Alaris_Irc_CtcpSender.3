.TH "Alaris::Irc::CtcpSender" 3 "25 May 2010" "Version 1.6" "Alaris IRC Bot" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Alaris::Irc::CtcpSender \- 
.PP
This class allows the client to send CTCP commands. There is no limit on what commands can actually be sent, however, the accepted CTCP commands are: \fBUserInfo\fP, Finger, Version, Source, ClientInfo, ErrMsg, and Time.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBAlaris::Irc::CommandBuilder\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBCtcpReply\fP (string command, string nick, string reply)"
.br
.RI "\fISend a reply in response to a CTCP request. Replies that exceed the IRC max length will be truncated. \fP"
.ti -1c
.RI "void \fBCtcpRequest\fP (string command, string nick)"
.br
.RI "\fISend a CTCP query to another user. \fP"
.ti -1c
.RI "void \fBCtcpPingReply\fP (string nick, string timestamp)"
.br
.RI "\fISend back a timestamp so the requester can calculate his ping to this client. \fP"
.ti -1c
.RI "void \fBCtcpPingRequest\fP (string nick, string timestamp)"
.br
.RI "\fISend a CTCP Ping request to another user. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class allows the client to send CTCP commands. There is no limit on what commands can actually be sent, however, the accepted CTCP commands are: \fBUserInfo\fP, Finger, Version, Source, ClientInfo, ErrMsg, and Time. 

Action, though it is also a CTCP command, is so common that it is handled by the normal sender class. 
.SH "Member Function Documentation"
.PP 
.SS "void Alaris.Irc.CtcpSender.CtcpPingReply (string nick, string timestamp)"
.PP
Send back a timestamp so the requester can calculate his ping to this client. \fBParameters:\fP
.RS 4
\fInick\fP The target's nick name.
.br
\fItimestamp\fP The timestamp sent by the requester.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentException\fP If the nick is invalid or the timestamp is empty.
.RE
.PP
\fBCtcpListener.OnCtcpPingReply\fP 
.SS "void Alaris.Irc.CtcpSender.CtcpPingRequest (string nick, string timestamp)"
.PP
Send a CTCP Ping request to another user. The target may also respond with an error or nothing at all if it cannot or does not want to answer.
.PP
\fBParameters:\fP
.RS 4
\fInick\fP The target's nick name.
.br
\fItimestamp\fP The timestamp to send to the target user. These can be generated by Thresher (\fBCtcpUtil.CreateTimestamp\fP) or by the client application.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentException\fP If the nick is invalid.
.RE
.PP
\fBCtcpListener.OnCtcpPingRequest\fP 
.SS "void Alaris.Irc.CtcpSender.CtcpReply (string command, string nick, string reply)"
.PP
Send a reply in response to a CTCP request. Replies that exceed the IRC max length will be truncated. \fBParameters:\fP
.RS 4
\fInick\fP The target's nick name.
.br
\fIcommand\fP The CTCP command. Should be a string constant from \fBCtcpUtil\fP.
.br
\fIreply\fP The text of the response.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentException\fP If the nick is invalid, the command is empty, or the reply is empty.
.RE
.PP
\fBCtcpListener.OnCtcpReply\fP 
.SS "void Alaris.Irc.CtcpSender.CtcpRequest (string command, string nick)"
.PP
Send a CTCP query to another user. The target may also respond with an error or nothing at all if it cannot or does not want to answer.
.PP
\fBParameters:\fP
.RS 4
\fInick\fP The target's nick name.
.br
\fIcommand\fP The CTCP command. Should be a string constant from \fBCtcpUtil\fP.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIArgumentException\fP If the nick is invalid or the command is empty.
.RE
.PP
\fBCtcpListener.OnCtcpRequest\fP 

.SH "Author"
.PP 
Generated automatically by Doxygen for Alaris IRC Bot from the source code.
