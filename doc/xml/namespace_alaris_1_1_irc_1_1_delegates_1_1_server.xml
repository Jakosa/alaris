<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server" kind="namespace">
    <compoundname>Alaris::Irc::Delegates::Server</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1afd5e6fea0ce52921cfca9150087a6c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.AdminEventHandler</definition>
        <argsstring>(string message)</argsstring>
        <name>AdminEventHandler</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>The response to an <ref refid="class_alaris_1_1_irc_1_1_sender_1a879bd90bdca103f95822876ae2fef57f" kindref="member">Sender.Admin</ref> request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>An information string.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1a5704c344c8fb235e34fc789d19e056d2" kindref="member">Listener.OnAdmin</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/AdminEventHandler.cs" line="8"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1a9ce465bc4393041cc6811e6c0b7732f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.AwayEventHandler</definition>
        <argsstring>(string nick, string awayMessage)</argsstring>
        <name>AwayEventHandler</name>
        <param>
          <type>string</type>
          <declname>nick</declname>
        </param>
        <param>
          <type>string</type>
          <declname>awayMessage</declname>
        </param>
        <briefdescription>
<para>A Notice or Private message was sent to someone whose status is away. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nick</parametername>
</parameternamelist>
<parameterdescription>
<para>The nick of the user who is away.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>awayMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>An away message, if any, set by the user. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1a0a268ad6d71c8f524bb1ed766630be22" kindref="member">Listener.OnAway</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/AwayEventHandler.cs" line="10"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1ab359935e6bfb5659c4d21e651ea17897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.ErrorMessageEventHandler</definition>
        <argsstring>(ReplyCode code, string message)</argsstring>
        <name>ErrorMessageEventHandler</name>
        <param>
          <type><ref refid="namespace_alaris_1_1_irc_1ad1f518153523cd3dd273f4fe36ae7b96" kindref="member">ReplyCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Error messages from the IRC server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The RFC 2812 or custom numeric code.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message text.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1acb02613cb07d203fc14baa385b42a479" kindref="member">Listener.OnError</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/ErrorMessageEventHandler.cs" line="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1ae28b69a2977d6038e321168b15ab72d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.InfoEventHandler</definition>
        <argsstring>(string message, bool last)</argsstring>
        <name>InfoEventHandler</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>The response to an <ref refid="class_alaris_1_1_irc_1_1_sender_1ad806ab2829530ff482aa4dc17799eed2" kindref="member">Sender.Info</ref> request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>An information string.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>True if this is the last in the set of messages.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1a719e932c4fc54bb62edce3e435dae100" kindref="member">Listener.OnInfo</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/InfoEventHandler.cs" line="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1a65a5a3add81b1ec0b4da9f072a8c2021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.MotdEventHandler</definition>
        <argsstring>(string message, bool last)</argsstring>
        <name>MotdEventHandler</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>The server&apos;s &quot;Message of the Day&quot; if any. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>An information string.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last</parametername>
</parameternamelist>
<parameterdescription>
<para>True if this is the last in the set of messages.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1ac45f7d7c13d6ed8e1c8e89500906ddd8" kindref="member">Listener.OnMotd</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/MotdEventHandler.cs" line="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1a9d0f446e5a49a03f4d88e9c1408951ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.NickErrorEventHandler</definition>
        <argsstring>(string badNick, string reason)</argsstring>
        <name>NickErrorEventHandler</name>
        <param>
          <type>string</type>
          <declname>badNick</declname>
        </param>
        <param>
          <type>string</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Called when a nick change fails. </para>        </briefdescription>
        <detaileddescription>
<para>This method can be called under 2 conditions: It can arise when the user is already registered with the IRC server and is trying change his nick. Or when the user is trying to register for the first time with the IRC server and it fails.</para><para>Note that if the later arises then you will have to manually complete the regsitration process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>badNick</parametername>
</parameternamelist>
<parameterdescription>
<para>The nick which caused the problem</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>A message explaining the error</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1ae64fd1185b1db5cd0e8a130174e385cd" kindref="member">Listener.OnNickError</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/NickErrorEventHandler.cs" line="18"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1ae958108578364fbdfff754a7176ce348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.NickEventHandler</definition>
        <argsstring>(UserInfo user, string newNick)</argsstring>
        <name>NickEventHandler</name>
        <param>
          <type><ref refid="class_alaris_1_1_irc_1_1_user_info" kindref="compound">UserInfo</ref></type>
          <declname>user</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newNick</declname>
        </param>
        <briefdescription>
<para>A user changed his nickname. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>The user who is changing his nick.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newNick</parametername>
</parameternamelist>
<parameterdescription>
<para>The new nickname.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1af287e36b8d9382d023ae68631dbb625e" kindref="member">Listener.OnNick</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/NickEventHandler.cs" line="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1a4439e8a1cd930f77033094ff46b78757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.PingEventHandler</definition>
        <argsstring>(string message)</argsstring>
        <name>PingEventHandler</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Called when a server sends a keep-alive Ping. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message that the IRC server wants echoed back to it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1aac31a2adf2bd42d034c494a7595bf3cb" kindref="member">Listener.OnPing</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/PingEventHandler.cs" line="8"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1a8227f1a2587165f27650d5eaebb13391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.QuitEventHandler</definition>
        <argsstring>(UserInfo user, string reason)</argsstring>
        <name>QuitEventHandler</name>
        <param>
          <type><ref refid="class_alaris_1_1_irc_1_1_user_info" kindref="compound">UserInfo</ref></type>
          <declname>user</declname>
        </param>
        <param>
          <type>string</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Someone has quit IRC. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>The user who quit.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>A goodbye message.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1ab69c8af150d7f9987711870a1f394da1" kindref="member">Listener.OnQuit</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/QuitEventHandler.cs" line="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1abaed0d06629135066129815b74439c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.RawMessageReceivedEventHandler</definition>
        <argsstring>(string message)</argsstring>
        <name>RawMessageReceivedEventHandler</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>The full unparsed text messages received from the IRC server. It includes all messages received except for those exchanged during a DCC chat. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The text received.</para></parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="class_alaris_1_1_irc_1_1_connection_1af81aba0fd6683fdd9adb03ae7a086c5a" kindref="member">Connection.OnRawMessageReceived</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/RawMessageReceivedEventHandler.cs" line="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1a6812c8396052c83b3a18dc259fbcebdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.RawMessageSentEventHandler</definition>
        <argsstring>(string message)</argsstring>
        <name>RawMessageSentEventHandler</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>The full unparsed text messages sent to the IRC server. It includes all messages sent except for those exchanged during a DCC chat. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The text sent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="class_alaris_1_1_irc_1_1_connection_1a42e6b6ecb5b38c97bb11cc2e2e30fb76" kindref="member">Connection.OnRawMessageSent</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/RawMessageSentEventHandler.cs" line="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1af09fd7e833c779d8ffd6eec6e90fe9a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.RegisteredEventHandler</definition>
        <argsstring>()</argsstring>
        <name>RegisteredEventHandler</name>
        <briefdescription>
<para><ref refid="class_alaris_1_1_irc_1_1_connection" kindref="compound">Connection</ref> with IRC server is open and registered. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1aed896f29cf045226d90c42da4e9e569c" kindref="member">Listener.OnRegistered</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/RegisteredEventHandler.cs" line="7"/>
      </memberdef>
      <memberdef kind="function" id="namespace_alaris_1_1_irc_1_1_delegates_1_1_server_1a2d496c0ba0e81727b43b3fda0e50bc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>delegate void</type>
        <definition>delegate void Alaris.Irc.Delegates.Server.ReplyEventHandler</definition>
        <argsstring>(ReplyCode code, string message)</argsstring>
        <name>ReplyEventHandler</name>
        <param>
          <type><ref refid="namespace_alaris_1_1_irc_1ad1f518153523cd3dd273f4fe36ae7b96" kindref="member">ReplyCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_alaris_1_1_irc_1_1_delegates_1_1_messages" kindref="compound">Messages</ref> that are not handled by other events and are not errors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The RFC 2812 numeric code.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The unparsed message text.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_alaris_1_1_irc_1_1_listener_1a1189e72b995b883ea3ebd5facfe6bb22" kindref="member">Listener.OnReply</ref></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/ReplyEventHandler.cs" line="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/irc/Delegates/Server/AdminEventHandler.cs" line="2"/>
  </compounddef>
</doxygen>
