<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="_client_packet_handler_8cs" kind="file">
    <compoundname>ClientPacketHandler.cs</compoundname>
    <innerclass refid="class_alaris_1_1_network_1_1_client_packet_handler" prot="public">Alaris::Network::ClientPacketHandler</innerclass>
    <innernamespace refid="namespace_alaris_1_1_network">Alaris::Network</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Net.Sockets;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Alaris.API;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Alaris.Core;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespace_alaris_1_1_network" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Alaris.Network</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>delegate<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_alaris_1_1_network_1a42aa0283867916f341b12507e7ebc8aa" kindref="member" tooltip="Delegate for handling client packets.">ClientPacketHandlerDelegate</ref>(<ref refid="class_alaris_1_1_core_1_1_alaris_packet" kindref="compound" tooltip="Class used to create packets which will be sent between Alaris server and client.">AlarisPacket</ref><sp/>packet,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>hst);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_alaris_1_1_network_1_1_client_packet_handler" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_alaris_1_1_network_1_1_client_packet_handler" kindref="compound" tooltip="Packet handler used by the client.">ClientPacketHandler</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21" refid="class_alaris_1_1_network_1_1_client_packet_handler_1a8374c8fc756b64630e437e34f421c086" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>ClientPacketHandlerDelegate<sp/>OnAuthDenied;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_alaris_1_1_network_1_1_client_packet_handler_1a47500b1793003c0942e6afc80736932e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>ClientPacketHandlerDelegate<sp/>OnAuthApproved;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_alaris_1_1_network_1_1_client_packet_handler_1ac110f617441422b736e1d43d38b6eb33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>ClientPacketHandlerDelegate<sp/>OnAcsRandom;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_alaris_1_1_network_1_1_client_packet_handler" kindref="compound" tooltip="Packet handler used by the client.">ClientPacketHandler</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAuthApproved<sp/>+=<sp/>AuthApprovedHandler;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAuthDenied<sp/>+=<sp/>AuthDeniedHandler;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAcsRandom<sp/>+=<sp/>AcsRandHandler;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_alaris_1_1_network_1_1_client_packet_handler_1a0c1739e5f04085c345e552acd2d22168" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_alaris_1_1_network_1_1_client_packet_handler_1ae3ce36fa1271dba94d6ac8327484a699" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandlePacket(<ref refid="class_alaris_1_1_core_1_1_alaris_packet" kindref="compound" tooltip="Class used to create packets which will be sent between Alaris server and client.">AlarisPacket</ref><sp/>packet,<sp/>TcpClient<sp/>client)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>hst<sp/>=<sp/>client.Client.RemoteEndPoint.ToString().Split(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)[0];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>packetid<sp/>=<sp/>packet.Read&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alaris_1_1_core_1_1_log" kindref="compound" tooltip="Logging class used all across Alaris.">Log</ref>.Debug(</highlight><highlight class="stringliteral">&quot;PacketHandler&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>packet<sp/>with<sp/>ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>packetid<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>from:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>client.Client.RemoteEndPoint);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetid<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespace_alaris_1_1_network_1ade8b0736678e671340c36efb93322f60" kindref="member" tooltip="List of possible Opcodes.">Opcode</ref>.SmsgAuthDenied)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAuthDenied(packet,<sp/>hst);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetid<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespace_alaris_1_1_network_1ade8b0736678e671340c36efb93322f60" kindref="member" tooltip="List of possible Opcodes.">Opcode</ref>.SmsgAuthApproved)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAuthApproved(packet,<sp/>hst);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packetid<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespace_alaris_1_1_network_1ade8b0736678e671340c36efb93322f60" kindref="member" tooltip="List of possible Opcodes.">Opcode</ref>.SmsgSendACSRandom)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OnAcsRandom(packet,<sp/>hst);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_alaris_1_1_network_1_1_client_packet_handler_1a8b04d865218dabc37de8916affc83002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuthDeniedHandler(<ref refid="class_alaris_1_1_core_1_1_alaris_packet" kindref="compound" tooltip="Class used to create packets which will be sent between Alaris server and client.">AlarisPacket</ref><sp/>pck,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>hst)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alaris_1_1_core_1_1_log" kindref="compound" tooltip="Logging class used all across Alaris.">Log</ref>.Error(</highlight><highlight class="stringliteral">&quot;AlarisServer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Authentication<sp/>denied<sp/>to<sp/>ACS<sp/>server.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Thread.Sleep(1000);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>sBot<sp/>=<sp/><ref refid="class_alaris_1_1_singleton-g" kindref="compound" tooltip="Manages the single instance of a class.">Singleton&lt;AlarisBot&gt;</ref>.Instance;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sBot.Disconnect(</highlight><highlight class="stringliteral">&quot;Auth<sp/>denied.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_alaris_1_1_network_1_1_client_packet_handler_1a492013bca30a9fd7a019799f92fd89fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AuthApprovedHandler(<ref refid="class_alaris_1_1_core_1_1_alaris_packet" kindref="compound" tooltip="Class used to create packets which will be sent between Alaris server and client.">AlarisPacket</ref><sp/>pck,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>hst)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alaris_1_1_core_1_1_log" kindref="compound" tooltip="Logging class used all across Alaris.">Log</ref>.Success(</highlight><highlight class="stringliteral">&quot;Alaris&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Successfully<sp/>authed<sp/>to<sp/>ACS<sp/>server.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_alaris_1_1_network_1_1_client_packet_handler_1a49e646f03d76194d41c095aa280055ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AcsRandHandler(<ref refid="class_alaris_1_1_core_1_1_alaris_packet" kindref="compound" tooltip="Class used to create packets which will be sent between Alaris server and client.">AlarisPacket</ref><sp/>pck,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>hst)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>random<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>rand<sp/>=<sp/>pck.Read&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>chan<sp/>=<sp/>pck.Read&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>sBot<sp/>=<sp/><ref refid="class_alaris_1_1_singleton-g" kindref="compound" tooltip="Manages the single instance of a class.">Singleton&lt;AlarisBot&gt;</ref>.Instance;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.IsNullOrEmpty(chan)<sp/>||<sp/>chan<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chan<sp/>=<sp/>sBot.AcsRandRequestChannel;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sBot.SendMsg(chan,<sp/></highlight><highlight class="stringliteral">&quot;ACS<sp/>sent<sp/>random:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>rand);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Twl/Documents/Visual Studio 2010/Projects/Alaris/alaris/Network/ClientPacketHandler.cs"/>
  </compounddef>
</doxygen>
